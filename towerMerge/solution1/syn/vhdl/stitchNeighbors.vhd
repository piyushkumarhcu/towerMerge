-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stitchNeighbors is
port (
    ap_ready : OUT STD_LOGIC;
    Ai_data_V : IN STD_LOGIC_VECTOR (31 downto 0);
    Bi_data_V : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of stitchNeighbors is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_400000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_const_lv32_4003FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000001111111111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_3FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal trunc_ln_fu_74_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1503_1_fu_90_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1503_2_fu_106_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1503_3_fu_116_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln214_fu_132_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln214_1_fu_146_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_fu_160_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_fu_164_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_fu_168_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_188_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln1503_4_fu_136_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln1356_2_fu_198_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln209_fu_222_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_240_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1503_8_fu_150_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_6_fu_250_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_180_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_fu_216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_3_fu_228_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_1_fu_100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phiStitch_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_1_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln895_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln895_fu_284_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_1_fu_210_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln895_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln895_1_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln895_2_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln895_1_fu_310_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln895_2_fu_336_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_5_fu_270_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_4_fu_264_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln895_3_fu_352_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln895_4_fu_360_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln879_fu_344_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln879_1_fu_368_p3 : STD_LOGIC_VECTOR (31 downto 0);


begin



    add_ln209_fu_222_p2 <= std_logic_vector(unsigned(trunc_ln214_1_fu_146_p1) + unsigned(trunc_ln214_fu_132_p1));
    and_ln879_1_fu_298_p2 <= (icmp_ln879_fu_84_p2 and and_ln879_fu_292_p2);
    and_ln879_fu_292_p2 <= (phiStitch_fu_126_p2 and icmp_ln879_1_fu_100_p2);
    and_ln895_1_fu_324_p2 <= (xor_ln895_fu_318_p2 and tmp_fu_180_p3);
    and_ln895_2_fu_330_p2 <= (and_ln895_1_fu_324_p2 and and_ln879_1_fu_298_p2);
    and_ln895_fu_304_p2 <= (icmp_ln895_fu_174_p2 and and_ln879_1_fu_298_p2);
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= select_ln879_fu_344_p3;
    ap_return_1 <= select_ln879_1_fu_368_p3;
    icmp_ln879_1_fu_100_p2 <= "1" when (trunc_ln1503_1_fu_90_p4 = ap_const_lv3_0) else "0";
    icmp_ln879_fu_84_p2 <= "1" when (trunc_ln_fu_74_p4 = ap_const_lv3_4) else "0";
    icmp_ln895_fu_174_p2 <= "1" when (unsigned(trunc_ln214_fu_132_p1) > unsigned(trunc_ln214_1_fu_146_p1)) else "0";
    lhs_V_fu_160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln214_fu_132_p1),11));
    or_ln1356_2_fu_198_p5 <= (((tmp_2_fu_188_p4 & ap_const_lv3_0) & trunc_ln1503_4_fu_136_p4) & ap_const_lv10_0);
    phiStitch_fu_126_p2 <= "1" when (trunc_ln1503_2_fu_106_p4 = trunc_ln1503_3_fu_116_p4) else "0";
    ret_V_1_fu_210_p2 <= (or_ln1356_2_fu_198_p5 or ap_const_lv32_400000);
    ret_V_2_fu_216_p2 <= (or_ln1356_2_fu_198_p5 or ap_const_lv32_4003FF);
    ret_V_3_fu_228_p5 <= (((tmp_2_fu_188_p4 & ap_const_lv3_4) & trunc_ln1503_4_fu_136_p4) & add_ln209_fu_222_p2);
    ret_V_4_fu_264_p2 <= (ret_V_6_fu_250_p6 or ap_const_lv32_3FF);
    ret_V_5_fu_270_p6 <= ((((tmp_5_fu_240_p4 & trunc_ln1503_2_fu_106_p4) & ap_const_lv3_0) & trunc_ln1503_8_fu_150_p4) & add_ln209_fu_222_p2);
    ret_V_6_fu_250_p6 <= ((((tmp_5_fu_240_p4 & trunc_ln1503_2_fu_106_p4) & ap_const_lv3_0) & trunc_ln1503_8_fu_150_p4) & ap_const_lv10_0);
    ret_V_fu_168_p2 <= std_logic_vector(unsigned(lhs_V_fu_160_p1) + unsigned(rhs_V_fu_164_p1));
    rhs_V_fu_164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln214_1_fu_146_p1),11));
    select_ln879_1_fu_368_p3 <= 
        select_ln895_4_fu_360_p3 when (and_ln879_1_fu_298_p2(0) = '1') else 
        Bi_data_V;
    select_ln879_fu_344_p3 <= 
        select_ln895_2_fu_336_p3 when (and_ln879_1_fu_298_p2(0) = '1') else 
        Ai_data_V;
    select_ln895_1_fu_310_p3 <= 
        select_ln895_fu_284_p3 when (and_ln895_fu_304_p2(0) = '1') else 
        ret_V_1_fu_210_p2;
    select_ln895_2_fu_336_p3 <= 
        ret_V_1_fu_210_p2 when (and_ln895_2_fu_330_p2(0) = '1') else 
        select_ln895_1_fu_310_p3;
    select_ln895_3_fu_352_p3 <= 
        ret_V_6_fu_250_p6 when (and_ln895_fu_304_p2(0) = '1') else 
        ret_V_5_fu_270_p6;
    select_ln895_4_fu_360_p3 <= 
        ret_V_4_fu_264_p2 when (and_ln895_2_fu_330_p2(0) = '1') else 
        select_ln895_3_fu_352_p3;
    select_ln895_fu_284_p3 <= 
        ret_V_2_fu_216_p2 when (tmp_fu_180_p3(0) = '1') else 
        ret_V_3_fu_228_p5;
    tmp_2_fu_188_p4 <= Ai_data_V(31 downto 23);
    tmp_5_fu_240_p4 <= Bi_data_V(31 downto 26);
    tmp_fu_180_p3 <= ret_V_fu_168_p2(10 downto 10);
    trunc_ln1503_1_fu_90_p4 <= Bi_data_V(22 downto 20);
    trunc_ln1503_2_fu_106_p4 <= Ai_data_V(25 downto 23);
    trunc_ln1503_3_fu_116_p4 <= Bi_data_V(25 downto 23);
    trunc_ln1503_4_fu_136_p4 <= Ai_data_V(19 downto 10);
    trunc_ln1503_8_fu_150_p4 <= Bi_data_V(19 downto 10);
    trunc_ln214_1_fu_146_p1 <= Bi_data_V(10 - 1 downto 0);
    trunc_ln214_fu_132_p1 <= Ai_data_V(10 - 1 downto 0);
    trunc_ln_fu_74_p4 <= Ai_data_V(22 downto 20);
    xor_ln895_fu_318_p2 <= (icmp_ln895_fu_174_p2 xor ap_const_lv1_1);
end behav;
