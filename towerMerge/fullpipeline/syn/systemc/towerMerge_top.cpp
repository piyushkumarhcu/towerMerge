// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "towerMerge_top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic towerMerge_top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic towerMerge_top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> towerMerge_top::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> towerMerge_top::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool towerMerge_top::ap_const_boolean_1 = true;
const sc_lv<2> towerMerge_top::ap_const_lv2_0 = "00";
const sc_lv<2> towerMerge_top::ap_const_lv2_2 = "10";
const sc_lv<2> towerMerge_top::ap_const_lv2_3 = "11";
const sc_lv<2> towerMerge_top::ap_const_lv2_1 = "1";
const bool towerMerge_top::ap_const_boolean_0 = false;
const sc_lv<1> towerMerge_top::ap_const_lv1_0 = "0";
const sc_lv<1> towerMerge_top::ap_const_lv1_1 = "1";
const sc_lv<8> towerMerge_top::ap_const_lv8_0 = "00000000";
const sc_lv<32> towerMerge_top::ap_const_lv32_20 = "100000";
const sc_lv<32> towerMerge_top::ap_const_lv32_3F = "111111";
const sc_lv<32> towerMerge_top::ap_const_lv32_40 = "1000000";
const sc_lv<32> towerMerge_top::ap_const_lv32_5F = "1011111";
const sc_lv<32> towerMerge_top::ap_const_lv32_60 = "1100000";
const sc_lv<32> towerMerge_top::ap_const_lv32_7F = "1111111";
const sc_lv<32> towerMerge_top::ap_const_lv32_80 = "10000000";
const sc_lv<32> towerMerge_top::ap_const_lv32_9F = "10011111";
const sc_lv<32> towerMerge_top::ap_const_lv32_A0 = "10100000";
const sc_lv<32> towerMerge_top::ap_const_lv32_BF = "10111111";
const sc_lv<32> towerMerge_top::ap_const_lv32_C0 = "11000000";
const sc_lv<32> towerMerge_top::ap_const_lv32_DF = "11011111";
const sc_lv<32> towerMerge_top::ap_const_lv32_E0 = "11100000";
const sc_lv<32> towerMerge_top::ap_const_lv32_FF = "11111111";
const sc_lv<32> towerMerge_top::ap_const_lv32_100 = "100000000";
const sc_lv<32> towerMerge_top::ap_const_lv32_11F = "100011111";
const sc_lv<32> towerMerge_top::ap_const_lv32_120 = "100100000";
const sc_lv<32> towerMerge_top::ap_const_lv32_13F = "100111111";
const sc_lv<32> towerMerge_top::ap_const_lv32_140 = "101000000";
const sc_lv<32> towerMerge_top::ap_const_lv32_15F = "101011111";
const sc_lv<32> towerMerge_top::ap_const_lv32_160 = "101100000";
const sc_lv<32> towerMerge_top::ap_const_lv32_17F = "101111111";
const sc_lv<32> towerMerge_top::ap_const_lv32_180 = "110000000";
const sc_lv<32> towerMerge_top::ap_const_lv32_19F = "110011111";
const sc_lv<32> towerMerge_top::ap_const_lv32_1A0 = "110100000";
const sc_lv<32> towerMerge_top::ap_const_lv32_1BF = "110111111";
const sc_lv<32> towerMerge_top::ap_const_lv32_1C0 = "111000000";
const sc_lv<32> towerMerge_top::ap_const_lv32_1DF = "111011111";
const sc_lv<32> towerMerge_top::ap_const_lv32_1E0 = "111100000";
const sc_lv<32> towerMerge_top::ap_const_lv32_1FF = "111111111";
const sc_lv<32> towerMerge_top::ap_const_lv32_200 = "1000000000";
const sc_lv<32> towerMerge_top::ap_const_lv32_21F = "1000011111";

towerMerge_top::towerMerge_top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    call_ret_stitchInPhi_fu_250 = new stitchInPhi("call_ret_stitchInPhi_fu_250");
    call_ret_stitchInPhi_fu_250->ap_ready(call_ret_stitchInPhi_fu_250_ap_ready);
    call_ret_stitchInPhi_fu_250->p_read(call_ret_stitchInPhi_fu_250_p_read);
    call_ret_stitchInPhi_fu_250->p_read1(call_ret_stitchInPhi_fu_250_p_read1);
    call_ret_stitchInPhi_fu_250->p_read2(call_ret_stitchInPhi_fu_250_p_read2);
    call_ret_stitchInPhi_fu_250->p_read3(call_ret_stitchInPhi_fu_250_p_read3);
    call_ret_stitchInPhi_fu_250->p_read4(call_ret_stitchInPhi_fu_250_p_read4);
    call_ret_stitchInPhi_fu_250->p_read5(call_ret_stitchInPhi_fu_250_p_read5);
    call_ret_stitchInPhi_fu_250->p_read6(call_ret_stitchInPhi_fu_250_p_read6);
    call_ret_stitchInPhi_fu_250->p_read7(call_ret_stitchInPhi_fu_250_p_read7);
    call_ret_stitchInPhi_fu_250->p_read8(call_ret_stitchInPhi_fu_250_p_read8);
    call_ret_stitchInPhi_fu_250->p_read9(call_ret_stitchInPhi_fu_250_p_read9);
    call_ret_stitchInPhi_fu_250->p_read10(call_ret_stitchInPhi_fu_250_p_read10);
    call_ret_stitchInPhi_fu_250->p_read11(call_ret_stitchInPhi_fu_250_p_read11);
    call_ret_stitchInPhi_fu_250->p_read12(call_ret_stitchInPhi_fu_250_p_read12);
    call_ret_stitchInPhi_fu_250->p_read13(call_ret_stitchInPhi_fu_250_p_read13);
    call_ret_stitchInPhi_fu_250->p_read14(call_ret_stitchInPhi_fu_250_p_read14);
    call_ret_stitchInPhi_fu_250->p_read15(call_ret_stitchInPhi_fu_250_p_read15);
    call_ret_stitchInPhi_fu_250->p_read16(call_ret_stitchInPhi_fu_250_p_read16);
    call_ret_stitchInPhi_fu_250->p_read17(call_ret_stitchInPhi_fu_250_p_read17);
    call_ret_stitchInPhi_fu_250->p_read18(call_ret_stitchInPhi_fu_250_p_read18);
    call_ret_stitchInPhi_fu_250->p_read19(call_ret_stitchInPhi_fu_250_p_read19);
    call_ret_stitchInPhi_fu_250->p_read20(call_ret_stitchInPhi_fu_250_p_read20);
    call_ret_stitchInPhi_fu_250->p_read21(call_ret_stitchInPhi_fu_250_p_read21);
    call_ret_stitchInPhi_fu_250->p_read22(call_ret_stitchInPhi_fu_250_p_read22);
    call_ret_stitchInPhi_fu_250->p_read23(call_ret_stitchInPhi_fu_250_p_read23);
    call_ret_stitchInPhi_fu_250->p_read24(call_ret_stitchInPhi_fu_250_p_read24);
    call_ret_stitchInPhi_fu_250->p_read25(call_ret_stitchInPhi_fu_250_p_read25);
    call_ret_stitchInPhi_fu_250->p_read26(call_ret_stitchInPhi_fu_250_p_read26);
    call_ret_stitchInPhi_fu_250->p_read27(call_ret_stitchInPhi_fu_250_p_read27);
    call_ret_stitchInPhi_fu_250->p_read28(call_ret_stitchInPhi_fu_250_p_read28);
    call_ret_stitchInPhi_fu_250->p_read29(call_ret_stitchInPhi_fu_250_p_read29);
    call_ret_stitchInPhi_fu_250->p_read30(call_ret_stitchInPhi_fu_250_p_read30);
    call_ret_stitchInPhi_fu_250->p_read31(call_ret_stitchInPhi_fu_250_p_read31);
    call_ret_stitchInPhi_fu_250->p_read32(call_ret_stitchInPhi_fu_250_p_read32);
    call_ret_stitchInPhi_fu_250->p_read33(call_ret_stitchInPhi_fu_250_p_read33);
    call_ret_stitchInPhi_fu_250->ap_return_0(call_ret_stitchInPhi_fu_250_ap_return_0);
    call_ret_stitchInPhi_fu_250->ap_return_1(call_ret_stitchInPhi_fu_250_ap_return_1);
    call_ret_stitchInPhi_fu_250->ap_return_2(call_ret_stitchInPhi_fu_250_ap_return_2);
    call_ret_stitchInPhi_fu_250->ap_return_3(call_ret_stitchInPhi_fu_250_ap_return_3);
    call_ret_stitchInPhi_fu_250->ap_return_4(call_ret_stitchInPhi_fu_250_ap_return_4);
    call_ret_stitchInPhi_fu_250->ap_return_5(call_ret_stitchInPhi_fu_250_ap_return_5);
    call_ret_stitchInPhi_fu_250->ap_return_6(call_ret_stitchInPhi_fu_250_ap_return_6);
    call_ret_stitchInPhi_fu_250->ap_return_7(call_ret_stitchInPhi_fu_250_ap_return_7);
    call_ret_stitchInPhi_fu_250->ap_return_8(call_ret_stitchInPhi_fu_250_ap_return_8);
    call_ret_stitchInPhi_fu_250->ap_return_9(call_ret_stitchInPhi_fu_250_ap_return_9);
    call_ret_stitchInPhi_fu_250->ap_return_10(call_ret_stitchInPhi_fu_250_ap_return_10);
    call_ret_stitchInPhi_fu_250->ap_return_11(call_ret_stitchInPhi_fu_250_ap_return_11);
    call_ret_stitchInPhi_fu_250->ap_return_12(call_ret_stitchInPhi_fu_250_ap_return_12);
    call_ret_stitchInPhi_fu_250->ap_return_13(call_ret_stitchInPhi_fu_250_ap_return_13);
    call_ret_stitchInPhi_fu_250->ap_return_14(call_ret_stitchInPhi_fu_250_ap_return_14);
    call_ret_stitchInPhi_fu_250->ap_return_15(call_ret_stitchInPhi_fu_250_ap_return_15);
    call_ret_stitchInPhi_fu_250->ap_return_16(call_ret_stitchInPhi_fu_250_ap_return_16);
    call_ret_stitchInPhi_fu_250->ap_return_17(call_ret_stitchInPhi_fu_250_ap_return_17);
    call_ret_stitchInPhi_fu_250->ap_return_18(call_ret_stitchInPhi_fu_250_ap_return_18);
    call_ret_stitchInPhi_fu_250->ap_return_19(call_ret_stitchInPhi_fu_250_ap_return_19);
    call_ret_stitchInPhi_fu_250->ap_return_20(call_ret_stitchInPhi_fu_250_ap_return_20);
    call_ret_stitchInPhi_fu_250->ap_return_21(call_ret_stitchInPhi_fu_250_ap_return_21);
    call_ret_stitchInPhi_fu_250->ap_return_22(call_ret_stitchInPhi_fu_250_ap_return_22);
    call_ret_stitchInPhi_fu_250->ap_return_23(call_ret_stitchInPhi_fu_250_ap_return_23);
    call_ret_stitchInPhi_fu_250->ap_return_24(call_ret_stitchInPhi_fu_250_ap_return_24);
    call_ret_stitchInPhi_fu_250->ap_return_25(call_ret_stitchInPhi_fu_250_ap_return_25);
    call_ret_stitchInPhi_fu_250->ap_return_26(call_ret_stitchInPhi_fu_250_ap_return_26);
    call_ret_stitchInPhi_fu_250->ap_return_27(call_ret_stitchInPhi_fu_250_ap_return_27);
    call_ret_stitchInPhi_fu_250->ap_return_28(call_ret_stitchInPhi_fu_250_ap_return_28);
    call_ret_stitchInPhi_fu_250->ap_return_29(call_ret_stitchInPhi_fu_250_ap_return_29);
    call_ret_stitchInPhi_fu_250->ap_return_30(call_ret_stitchInPhi_fu_250_ap_return_30);
    call_ret_stitchInPhi_fu_250->ap_return_31(call_ret_stitchInPhi_fu_250_ap_return_31);
    call_ret_stitchInPhi_fu_250->ap_return_32(call_ret_stitchInPhi_fu_250_ap_return_32);
    call_ret_stitchInPhi_fu_250->ap_return_33(call_ret_stitchInPhi_fu_250_ap_return_33);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( link_in_1_V_data_V_0_vld_out );
    sensitive << ( link_in_2_V_data_V_0_vld_out );
    sensitive << ( link_in_0_V_data_V_0_vld_out );
    sensitive << ( link_in_3_V_data_V_0_vld_out );
    sensitive << ( link_out_0_TREADY );
    sensitive << ( link_out_1_TREADY );
    sensitive << ( link_out_2_TREADY );
    sensitive << ( link_out_3_TREADY );
    sensitive << ( link_out_0_V_data_V_1_state );
    sensitive << ( link_out_1_V_data_V_1_state );
    sensitive << ( link_out_2_V_data_V_1_state );
    sensitive << ( link_out_3_V_data_V_1_state );
    sensitive << ( link_out_0_V_user_V_1_state );
    sensitive << ( link_out_1_V_user_V_1_state );
    sensitive << ( link_out_2_V_user_V_1_state );
    sensitive << ( link_out_3_V_user_V_1_state );
    sensitive << ( link_out_0_V_last_V_1_state );
    sensitive << ( link_out_1_V_last_V_1_state );
    sensitive << ( link_out_2_V_last_V_1_state );
    sensitive << ( link_out_3_V_last_V_1_state );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( link_in_1_V_data_V_0_vld_out );
    sensitive << ( link_in_2_V_data_V_0_vld_out );
    sensitive << ( link_in_0_V_data_V_0_vld_out );
    sensitive << ( link_in_3_V_data_V_0_vld_out );
    sensitive << ( link_out_0_TREADY );
    sensitive << ( link_out_1_TREADY );
    sensitive << ( link_out_2_TREADY );
    sensitive << ( link_out_3_TREADY );
    sensitive << ( ap_block_state1_io );
    sensitive << ( link_out_0_V_data_V_1_state );
    sensitive << ( link_out_1_V_data_V_1_state );
    sensitive << ( link_out_2_V_data_V_1_state );
    sensitive << ( link_out_3_V_data_V_1_state );
    sensitive << ( link_out_0_V_user_V_1_state );
    sensitive << ( link_out_1_V_user_V_1_state );
    sensitive << ( link_out_2_V_user_V_1_state );
    sensitive << ( link_out_3_V_user_V_1_state );
    sensitive << ( link_out_0_V_last_V_1_state );
    sensitive << ( link_out_1_V_last_V_1_state );
    sensitive << ( link_out_2_V_last_V_1_state );
    sensitive << ( link_out_3_V_last_V_1_state );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( link_in_1_V_data_V_0_vld_out );
    sensitive << ( link_in_2_V_data_V_0_vld_out );
    sensitive << ( link_in_0_V_data_V_0_vld_out );
    sensitive << ( link_in_3_V_data_V_0_vld_out );
    sensitive << ( link_out_0_TREADY );
    sensitive << ( link_out_1_TREADY );
    sensitive << ( link_out_2_TREADY );
    sensitive << ( link_out_3_TREADY );
    sensitive << ( ap_block_state1_io );
    sensitive << ( link_out_0_V_data_V_1_state );
    sensitive << ( link_out_1_V_data_V_1_state );
    sensitive << ( link_out_2_V_data_V_1_state );
    sensitive << ( link_out_3_V_data_V_1_state );
    sensitive << ( link_out_0_V_user_V_1_state );
    sensitive << ( link_out_1_V_user_V_1_state );
    sensitive << ( link_out_2_V_user_V_1_state );
    sensitive << ( link_out_3_V_user_V_1_state );
    sensitive << ( link_out_0_V_last_V_1_state );
    sensitive << ( link_out_1_V_last_V_1_state );
    sensitive << ( link_out_2_V_last_V_1_state );
    sensitive << ( link_out_3_V_last_V_1_state );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_block_state1_io);
    sensitive << ( link_out_0_V_data_V_1_ack_in );
    sensitive << ( link_out_1_V_data_V_1_ack_in );
    sensitive << ( link_out_2_V_data_V_1_ack_in );
    sensitive << ( link_out_3_V_data_V_1_ack_in );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( link_in_1_V_data_V_0_vld_out );
    sensitive << ( link_in_2_V_data_V_0_vld_out );
    sensitive << ( link_in_0_V_data_V_0_vld_out );
    sensitive << ( link_in_3_V_data_V_0_vld_out );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( link_out_0_V_data_V_1_ack_in );
    sensitive << ( link_out_1_V_data_V_1_ack_in );
    sensitive << ( link_out_2_V_data_V_1_ack_in );
    sensitive << ( link_out_3_V_data_V_1_ack_in );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( link_out_0_TREADY );
    sensitive << ( link_out_1_TREADY );
    sensitive << ( link_out_2_TREADY );
    sensitive << ( link_out_3_TREADY );
    sensitive << ( link_out_0_V_data_V_1_state );
    sensitive << ( link_out_1_V_data_V_1_state );
    sensitive << ( link_out_2_V_data_V_1_state );
    sensitive << ( link_out_3_V_data_V_1_state );
    sensitive << ( link_out_0_V_user_V_1_state );
    sensitive << ( link_out_1_V_user_V_1_state );
    sensitive << ( link_out_2_V_user_V_1_state );
    sensitive << ( link_out_3_V_user_V_1_state );
    sensitive << ( link_out_0_V_last_V_1_state );
    sensitive << ( link_out_1_V_last_V_1_state );
    sensitive << ( link_out_2_V_last_V_1_state );
    sensitive << ( link_out_3_V_last_V_1_state );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read10);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read11);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read12);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read13);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read14);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read15);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read16);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read17);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read18);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read19);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read20);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read21);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read22);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read23);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read24);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read25);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read26);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read27);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read28);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read29);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read3);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read30);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read31);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read32);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read33);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read4);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read5);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read6);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read7);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read8);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_call_ret_stitchInPhi_fu_250_p_read9);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_data_out );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_link_in_0_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_0_V_data_V_0_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_link_in_0_TREADY);
    sensitive << ( link_in_0_V_last_V_0_state );

    SC_METHOD(thread_link_in_0_V_data_V_0_ack_in);
    sensitive << ( link_in_0_V_data_V_0_state );

    SC_METHOD(thread_link_in_0_V_data_V_0_ack_out);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_in_0_V_data_V_0_data_out);
    sensitive << ( link_in_0_V_data_V_0_payload_A );
    sensitive << ( link_in_0_V_data_V_0_payload_B );
    sensitive << ( link_in_0_V_data_V_0_sel );

    SC_METHOD(thread_link_in_0_V_data_V_0_load_A);
    sensitive << ( link_in_0_V_data_V_0_sel_wr );
    sensitive << ( link_in_0_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_link_in_0_V_data_V_0_load_B);
    sensitive << ( link_in_0_V_data_V_0_sel_wr );
    sensitive << ( link_in_0_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_link_in_0_V_data_V_0_sel);
    sensitive << ( link_in_0_V_data_V_0_sel_rd );

    SC_METHOD(thread_link_in_0_V_data_V_0_state_cmp_full);
    sensitive << ( link_in_0_V_data_V_0_state );

    SC_METHOD(thread_link_in_0_V_data_V_0_vld_in);
    sensitive << ( link_in_0_TVALID );

    SC_METHOD(thread_link_in_0_V_data_V_0_vld_out);
    sensitive << ( link_in_0_V_data_V_0_state );

    SC_METHOD(thread_link_in_0_V_last_V_0_ack_out);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_in_0_V_last_V_0_vld_in);
    sensitive << ( link_in_0_TVALID );

    SC_METHOD(thread_link_in_1_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_1_V_data_V_0_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_link_in_1_TREADY);
    sensitive << ( link_in_1_V_last_V_0_state );

    SC_METHOD(thread_link_in_1_V_data_V_0_ack_in);
    sensitive << ( link_in_1_V_data_V_0_state );

    SC_METHOD(thread_link_in_1_V_data_V_0_ack_out);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_in_1_V_data_V_0_data_out);
    sensitive << ( link_in_1_V_data_V_0_payload_A );
    sensitive << ( link_in_1_V_data_V_0_payload_B );
    sensitive << ( link_in_1_V_data_V_0_sel );

    SC_METHOD(thread_link_in_1_V_data_V_0_load_A);
    sensitive << ( link_in_1_V_data_V_0_sel_wr );
    sensitive << ( link_in_1_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_link_in_1_V_data_V_0_load_B);
    sensitive << ( link_in_1_V_data_V_0_sel_wr );
    sensitive << ( link_in_1_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_link_in_1_V_data_V_0_sel);
    sensitive << ( link_in_1_V_data_V_0_sel_rd );

    SC_METHOD(thread_link_in_1_V_data_V_0_state_cmp_full);
    sensitive << ( link_in_1_V_data_V_0_state );

    SC_METHOD(thread_link_in_1_V_data_V_0_vld_in);
    sensitive << ( link_in_1_TVALID );

    SC_METHOD(thread_link_in_1_V_data_V_0_vld_out);
    sensitive << ( link_in_1_V_data_V_0_state );

    SC_METHOD(thread_link_in_1_V_last_V_0_ack_out);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_in_1_V_last_V_0_vld_in);
    sensitive << ( link_in_1_TVALID );

    SC_METHOD(thread_link_in_2_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_2_V_data_V_0_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_link_in_2_TREADY);
    sensitive << ( link_in_2_V_last_V_0_state );

    SC_METHOD(thread_link_in_2_V_data_V_0_ack_in);
    sensitive << ( link_in_2_V_data_V_0_state );

    SC_METHOD(thread_link_in_2_V_data_V_0_ack_out);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_in_2_V_data_V_0_data_out);
    sensitive << ( link_in_2_V_data_V_0_payload_A );
    sensitive << ( link_in_2_V_data_V_0_payload_B );
    sensitive << ( link_in_2_V_data_V_0_sel );

    SC_METHOD(thread_link_in_2_V_data_V_0_load_A);
    sensitive << ( link_in_2_V_data_V_0_sel_wr );
    sensitive << ( link_in_2_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_link_in_2_V_data_V_0_load_B);
    sensitive << ( link_in_2_V_data_V_0_sel_wr );
    sensitive << ( link_in_2_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_link_in_2_V_data_V_0_sel);
    sensitive << ( link_in_2_V_data_V_0_sel_rd );

    SC_METHOD(thread_link_in_2_V_data_V_0_state_cmp_full);
    sensitive << ( link_in_2_V_data_V_0_state );

    SC_METHOD(thread_link_in_2_V_data_V_0_vld_in);
    sensitive << ( link_in_2_TVALID );

    SC_METHOD(thread_link_in_2_V_data_V_0_vld_out);
    sensitive << ( link_in_2_V_data_V_0_state );

    SC_METHOD(thread_link_in_2_V_last_V_0_ack_out);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_in_2_V_last_V_0_vld_in);
    sensitive << ( link_in_2_TVALID );

    SC_METHOD(thread_link_in_3_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( link_in_3_V_data_V_0_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_link_in_3_TREADY);
    sensitive << ( link_in_3_V_last_V_0_state );

    SC_METHOD(thread_link_in_3_V_data_V_0_ack_in);
    sensitive << ( link_in_3_V_data_V_0_state );

    SC_METHOD(thread_link_in_3_V_data_V_0_ack_out);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_in_3_V_data_V_0_data_out);
    sensitive << ( link_in_3_V_data_V_0_payload_A );
    sensitive << ( link_in_3_V_data_V_0_payload_B );
    sensitive << ( link_in_3_V_data_V_0_sel );

    SC_METHOD(thread_link_in_3_V_data_V_0_load_A);
    sensitive << ( link_in_3_V_data_V_0_sel_wr );
    sensitive << ( link_in_3_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_link_in_3_V_data_V_0_load_B);
    sensitive << ( link_in_3_V_data_V_0_sel_wr );
    sensitive << ( link_in_3_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_link_in_3_V_data_V_0_sel);
    sensitive << ( link_in_3_V_data_V_0_sel_rd );

    SC_METHOD(thread_link_in_3_V_data_V_0_state_cmp_full);
    sensitive << ( link_in_3_V_data_V_0_state );

    SC_METHOD(thread_link_in_3_V_data_V_0_vld_in);
    sensitive << ( link_in_3_TVALID );

    SC_METHOD(thread_link_in_3_V_data_V_0_vld_out);
    sensitive << ( link_in_3_V_data_V_0_state );

    SC_METHOD(thread_link_in_3_V_last_V_0_ack_out);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_in_3_V_last_V_0_vld_in);
    sensitive << ( link_in_3_TVALID );

    SC_METHOD(thread_link_out_0_TDATA);
    sensitive << ( link_out_0_V_data_V_1_data_out );

    SC_METHOD(thread_link_out_0_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( link_out_0_V_data_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_link_out_0_TLAST);
    sensitive << ( link_out_0_V_last_V_1_data_out );

    SC_METHOD(thread_link_out_0_TUSER);
    sensitive << ( link_out_0_V_user_V_1_data_out );

    SC_METHOD(thread_link_out_0_TVALID);
    sensitive << ( link_out_0_V_last_V_1_state );

    SC_METHOD(thread_link_out_0_V_data_V_1_ack_in);
    sensitive << ( link_out_0_V_data_V_1_state );

    SC_METHOD(thread_link_out_0_V_data_V_1_ack_out);
    sensitive << ( link_out_0_TREADY );

    SC_METHOD(thread_link_out_0_V_data_V_1_data_out);
    sensitive << ( link_out_0_V_data_V_1_payload_A );
    sensitive << ( link_out_0_V_data_V_1_payload_B );
    sensitive << ( link_out_0_V_data_V_1_sel );

    SC_METHOD(thread_link_out_0_V_data_V_1_load_A);
    sensitive << ( link_out_0_V_data_V_1_sel_wr );
    sensitive << ( link_out_0_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_link_out_0_V_data_V_1_load_B);
    sensitive << ( link_out_0_V_data_V_1_sel_wr );
    sensitive << ( link_out_0_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_link_out_0_V_data_V_1_sel);
    sensitive << ( link_out_0_V_data_V_1_sel_rd );

    SC_METHOD(thread_link_out_0_V_data_V_1_state_cmp_full);
    sensitive << ( link_out_0_V_data_V_1_state );

    SC_METHOD(thread_link_out_0_V_data_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_0_V_data_V_1_vld_out);
    sensitive << ( link_out_0_V_data_V_1_state );

    SC_METHOD(thread_link_out_0_V_last_V_1_ack_out);
    sensitive << ( link_out_0_TREADY );

    SC_METHOD(thread_link_out_0_V_last_V_1_data_out);
    sensitive << ( link_out_0_V_last_V_1_sel );

    SC_METHOD(thread_link_out_0_V_last_V_1_sel);
    sensitive << ( link_out_0_V_last_V_1_sel_rd );

    SC_METHOD(thread_link_out_0_V_last_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_0_V_last_V_1_vld_out);
    sensitive << ( link_out_0_V_last_V_1_state );

    SC_METHOD(thread_link_out_0_V_user_V_1_ack_out);
    sensitive << ( link_out_0_TREADY );

    SC_METHOD(thread_link_out_0_V_user_V_1_data_out);
    sensitive << ( link_out_0_V_user_V_1_sel );

    SC_METHOD(thread_link_out_0_V_user_V_1_sel);
    sensitive << ( link_out_0_V_user_V_1_sel_rd );

    SC_METHOD(thread_link_out_0_V_user_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_0_V_user_V_1_vld_out);
    sensitive << ( link_out_0_V_user_V_1_state );

    SC_METHOD(thread_link_out_1_TDATA);
    sensitive << ( link_out_1_V_data_V_1_data_out );

    SC_METHOD(thread_link_out_1_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( link_out_1_V_data_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_link_out_1_TLAST);
    sensitive << ( link_out_1_V_last_V_1_data_out );

    SC_METHOD(thread_link_out_1_TUSER);
    sensitive << ( link_out_1_V_user_V_1_data_out );

    SC_METHOD(thread_link_out_1_TVALID);
    sensitive << ( link_out_1_V_last_V_1_state );

    SC_METHOD(thread_link_out_1_V_data_V_1_ack_in);
    sensitive << ( link_out_1_V_data_V_1_state );

    SC_METHOD(thread_link_out_1_V_data_V_1_ack_out);
    sensitive << ( link_out_1_TREADY );

    SC_METHOD(thread_link_out_1_V_data_V_1_data_out);
    sensitive << ( link_out_1_V_data_V_1_payload_A );
    sensitive << ( link_out_1_V_data_V_1_payload_B );
    sensitive << ( link_out_1_V_data_V_1_sel );

    SC_METHOD(thread_link_out_1_V_data_V_1_load_A);
    sensitive << ( link_out_1_V_data_V_1_sel_wr );
    sensitive << ( link_out_1_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_link_out_1_V_data_V_1_load_B);
    sensitive << ( link_out_1_V_data_V_1_sel_wr );
    sensitive << ( link_out_1_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_link_out_1_V_data_V_1_sel);
    sensitive << ( link_out_1_V_data_V_1_sel_rd );

    SC_METHOD(thread_link_out_1_V_data_V_1_state_cmp_full);
    sensitive << ( link_out_1_V_data_V_1_state );

    SC_METHOD(thread_link_out_1_V_data_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_1_V_data_V_1_vld_out);
    sensitive << ( link_out_1_V_data_V_1_state );

    SC_METHOD(thread_link_out_1_V_last_V_1_ack_out);
    sensitive << ( link_out_1_TREADY );

    SC_METHOD(thread_link_out_1_V_last_V_1_data_out);
    sensitive << ( link_out_1_V_last_V_1_sel );

    SC_METHOD(thread_link_out_1_V_last_V_1_sel);
    sensitive << ( link_out_1_V_last_V_1_sel_rd );

    SC_METHOD(thread_link_out_1_V_last_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_1_V_last_V_1_vld_out);
    sensitive << ( link_out_1_V_last_V_1_state );

    SC_METHOD(thread_link_out_1_V_user_V_1_ack_out);
    sensitive << ( link_out_1_TREADY );

    SC_METHOD(thread_link_out_1_V_user_V_1_data_out);
    sensitive << ( link_out_1_V_user_V_1_sel );

    SC_METHOD(thread_link_out_1_V_user_V_1_sel);
    sensitive << ( link_out_1_V_user_V_1_sel_rd );

    SC_METHOD(thread_link_out_1_V_user_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_1_V_user_V_1_vld_out);
    sensitive << ( link_out_1_V_user_V_1_state );

    SC_METHOD(thread_link_out_2_TDATA);
    sensitive << ( link_out_2_V_data_V_1_data_out );

    SC_METHOD(thread_link_out_2_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( link_out_2_V_data_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_link_out_2_TLAST);
    sensitive << ( link_out_2_V_last_V_1_data_out );

    SC_METHOD(thread_link_out_2_TUSER);
    sensitive << ( link_out_2_V_user_V_1_data_out );

    SC_METHOD(thread_link_out_2_TVALID);
    sensitive << ( link_out_2_V_last_V_1_state );

    SC_METHOD(thread_link_out_2_V_data_V_1_ack_in);
    sensitive << ( link_out_2_V_data_V_1_state );

    SC_METHOD(thread_link_out_2_V_data_V_1_ack_out);
    sensitive << ( link_out_2_TREADY );

    SC_METHOD(thread_link_out_2_V_data_V_1_data_out);
    sensitive << ( link_out_2_V_data_V_1_payload_A );
    sensitive << ( link_out_2_V_data_V_1_payload_B );
    sensitive << ( link_out_2_V_data_V_1_sel );

    SC_METHOD(thread_link_out_2_V_data_V_1_load_A);
    sensitive << ( link_out_2_V_data_V_1_sel_wr );
    sensitive << ( link_out_2_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_link_out_2_V_data_V_1_load_B);
    sensitive << ( link_out_2_V_data_V_1_sel_wr );
    sensitive << ( link_out_2_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_link_out_2_V_data_V_1_sel);
    sensitive << ( link_out_2_V_data_V_1_sel_rd );

    SC_METHOD(thread_link_out_2_V_data_V_1_state_cmp_full);
    sensitive << ( link_out_2_V_data_V_1_state );

    SC_METHOD(thread_link_out_2_V_data_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_2_V_data_V_1_vld_out);
    sensitive << ( link_out_2_V_data_V_1_state );

    SC_METHOD(thread_link_out_2_V_last_V_1_ack_out);
    sensitive << ( link_out_2_TREADY );

    SC_METHOD(thread_link_out_2_V_last_V_1_data_out);
    sensitive << ( link_out_2_V_last_V_1_sel );

    SC_METHOD(thread_link_out_2_V_last_V_1_sel);
    sensitive << ( link_out_2_V_last_V_1_sel_rd );

    SC_METHOD(thread_link_out_2_V_last_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_2_V_last_V_1_vld_out);
    sensitive << ( link_out_2_V_last_V_1_state );

    SC_METHOD(thread_link_out_2_V_user_V_1_ack_out);
    sensitive << ( link_out_2_TREADY );

    SC_METHOD(thread_link_out_2_V_user_V_1_data_out);
    sensitive << ( link_out_2_V_user_V_1_sel );

    SC_METHOD(thread_link_out_2_V_user_V_1_sel);
    sensitive << ( link_out_2_V_user_V_1_sel_rd );

    SC_METHOD(thread_link_out_2_V_user_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_2_V_user_V_1_vld_out);
    sensitive << ( link_out_2_V_user_V_1_state );

    SC_METHOD(thread_link_out_3_TDATA);
    sensitive << ( link_out_3_V_data_V_1_data_out );

    SC_METHOD(thread_link_out_3_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( link_out_3_V_data_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_link_out_3_TLAST);
    sensitive << ( link_out_3_V_last_V_1_data_out );

    SC_METHOD(thread_link_out_3_TUSER);
    sensitive << ( link_out_3_V_user_V_1_data_out );

    SC_METHOD(thread_link_out_3_TVALID);
    sensitive << ( link_out_3_V_last_V_1_state );

    SC_METHOD(thread_link_out_3_V_data_V_1_ack_in);
    sensitive << ( link_out_3_V_data_V_1_state );

    SC_METHOD(thread_link_out_3_V_data_V_1_ack_out);
    sensitive << ( link_out_3_TREADY );

    SC_METHOD(thread_link_out_3_V_data_V_1_data_out);
    sensitive << ( link_out_3_V_data_V_1_payload_A );
    sensitive << ( link_out_3_V_data_V_1_payload_B );
    sensitive << ( link_out_3_V_data_V_1_sel );

    SC_METHOD(thread_link_out_3_V_data_V_1_load_A);
    sensitive << ( link_out_3_V_data_V_1_sel_wr );
    sensitive << ( link_out_3_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_link_out_3_V_data_V_1_load_B);
    sensitive << ( link_out_3_V_data_V_1_sel_wr );
    sensitive << ( link_out_3_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_link_out_3_V_data_V_1_sel);
    sensitive << ( link_out_3_V_data_V_1_sel_rd );

    SC_METHOD(thread_link_out_3_V_data_V_1_state_cmp_full);
    sensitive << ( link_out_3_V_data_V_1_state );

    SC_METHOD(thread_link_out_3_V_data_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_3_V_data_V_1_vld_out);
    sensitive << ( link_out_3_V_data_V_1_state );

    SC_METHOD(thread_link_out_3_V_last_V_1_ack_out);
    sensitive << ( link_out_3_TREADY );

    SC_METHOD(thread_link_out_3_V_last_V_1_data_out);
    sensitive << ( link_out_3_V_last_V_1_sel );

    SC_METHOD(thread_link_out_3_V_last_V_1_sel);
    sensitive << ( link_out_3_V_last_V_1_sel_rd );

    SC_METHOD(thread_link_out_3_V_last_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_3_V_last_V_1_vld_out);
    sensitive << ( link_out_3_V_last_V_1_state );

    SC_METHOD(thread_link_out_3_V_user_V_1_ack_out);
    sensitive << ( link_out_3_TREADY );

    SC_METHOD(thread_link_out_3_V_user_V_1_data_out);
    sensitive << ( link_out_3_V_user_V_1_sel );

    SC_METHOD(thread_link_out_3_V_user_V_1_sel);
    sensitive << ( link_out_3_V_user_V_1_sel_rd );

    SC_METHOD(thread_link_out_3_V_user_V_1_vld_in);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_link_out_3_V_user_V_1_vld_out);
    sensitive << ( link_out_3_V_user_V_1_state );

    SC_METHOD(thread_tmp_1_fu_850_p18);
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_17 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_18 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_19 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_20 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_21 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_22 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_23 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_24 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_25 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_26 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_27 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_28 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_29 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_30 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_31 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_32 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_33 );

    SC_METHOD(thread_tmp_data_V_4_fu_837_p5);
    sensitive << ( link_in_0_V_data_V_0_data_out );
    sensitive << ( tmp_fu_799_p18 );

    SC_METHOD(thread_tmp_data_V_5_fu_888_p5);
    sensitive << ( link_in_0_V_data_V_0_data_out );
    sensitive << ( tmp_1_fu_850_p18 );

    SC_METHOD(thread_tmp_fu_799_p18);
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_0 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_1 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_2 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_3 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_4 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_5 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_6 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_7 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_8 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_9 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_10 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_11 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_12 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_13 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_14 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_15 );
    sensitive << ( call_ret_stitchInPhi_fu_250_ap_return_16 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    link_out_0_V_data_V_1_state = "00";
    link_out_1_V_data_V_1_state = "00";
    link_out_2_V_data_V_1_state = "00";
    link_out_3_V_data_V_1_state = "00";
    link_out_0_V_user_V_1_state = "00";
    link_out_1_V_user_V_1_state = "00";
    link_out_2_V_user_V_1_state = "00";
    link_out_3_V_user_V_1_state = "00";
    link_out_0_V_last_V_1_state = "00";
    link_out_1_V_last_V_1_state = "00";
    link_out_2_V_last_V_1_state = "00";
    link_out_3_V_last_V_1_state = "00";
    link_in_0_V_data_V_0_sel_rd = SC_LOGIC_0;
    link_in_0_V_data_V_0_sel_wr = SC_LOGIC_0;
    link_in_0_V_data_V_0_state = "00";
    link_in_1_V_data_V_0_sel_rd = SC_LOGIC_0;
    link_in_1_V_data_V_0_sel_wr = SC_LOGIC_0;
    link_in_1_V_data_V_0_state = "00";
    link_in_2_V_data_V_0_sel_rd = SC_LOGIC_0;
    link_in_2_V_data_V_0_sel_wr = SC_LOGIC_0;
    link_in_2_V_data_V_0_state = "00";
    link_in_3_V_data_V_0_sel_rd = SC_LOGIC_0;
    link_in_3_V_data_V_0_sel_wr = SC_LOGIC_0;
    link_in_3_V_data_V_0_state = "00";
    link_in_0_V_last_V_0_state = "00";
    link_in_1_V_last_V_0_state = "00";
    link_in_2_V_last_V_0_state = "00";
    link_in_3_V_last_V_0_state = "00";
    link_out_0_V_data_V_1_sel_rd = SC_LOGIC_0;
    link_out_0_V_data_V_1_sel_wr = SC_LOGIC_0;
    link_out_1_V_data_V_1_sel_rd = SC_LOGIC_0;
    link_out_1_V_data_V_1_sel_wr = SC_LOGIC_0;
    link_out_2_V_data_V_1_sel_rd = SC_LOGIC_0;
    link_out_2_V_data_V_1_sel_wr = SC_LOGIC_0;
    link_out_3_V_data_V_1_sel_rd = SC_LOGIC_0;
    link_out_3_V_data_V_1_sel_wr = SC_LOGIC_0;
    link_out_0_V_user_V_1_sel_rd = SC_LOGIC_0;
    link_out_1_V_user_V_1_sel_rd = SC_LOGIC_0;
    link_out_2_V_user_V_1_sel_rd = SC_LOGIC_0;
    link_out_3_V_user_V_1_sel_rd = SC_LOGIC_0;
    link_out_0_V_last_V_1_sel_rd = SC_LOGIC_0;
    link_out_1_V_last_V_1_sel_rd = SC_LOGIC_0;
    link_out_2_V_last_V_1_sel_rd = SC_LOGIC_0;
    link_out_3_V_last_V_1_sel_rd = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "towerMerge_top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, link_out_0_TREADY, "(port)link_out_0_TREADY");
    sc_trace(mVcdFile, link_out_1_TREADY, "(port)link_out_1_TREADY");
    sc_trace(mVcdFile, link_out_2_TREADY, "(port)link_out_2_TREADY");
    sc_trace(mVcdFile, link_out_3_TREADY, "(port)link_out_3_TREADY");
    sc_trace(mVcdFile, link_in_0_TDATA, "(port)link_in_0_TDATA");
    sc_trace(mVcdFile, link_in_0_TVALID, "(port)link_in_0_TVALID");
    sc_trace(mVcdFile, link_in_0_TREADY, "(port)link_in_0_TREADY");
    sc_trace(mVcdFile, link_in_1_TDATA, "(port)link_in_1_TDATA");
    sc_trace(mVcdFile, link_in_1_TVALID, "(port)link_in_1_TVALID");
    sc_trace(mVcdFile, link_in_1_TREADY, "(port)link_in_1_TREADY");
    sc_trace(mVcdFile, link_in_2_TDATA, "(port)link_in_2_TDATA");
    sc_trace(mVcdFile, link_in_2_TVALID, "(port)link_in_2_TVALID");
    sc_trace(mVcdFile, link_in_2_TREADY, "(port)link_in_2_TREADY");
    sc_trace(mVcdFile, link_in_3_TDATA, "(port)link_in_3_TDATA");
    sc_trace(mVcdFile, link_in_3_TVALID, "(port)link_in_3_TVALID");
    sc_trace(mVcdFile, link_in_3_TREADY, "(port)link_in_3_TREADY");
    sc_trace(mVcdFile, link_in_0_TUSER, "(port)link_in_0_TUSER");
    sc_trace(mVcdFile, link_in_1_TUSER, "(port)link_in_1_TUSER");
    sc_trace(mVcdFile, link_in_2_TUSER, "(port)link_in_2_TUSER");
    sc_trace(mVcdFile, link_in_3_TUSER, "(port)link_in_3_TUSER");
    sc_trace(mVcdFile, link_in_0_TLAST, "(port)link_in_0_TLAST");
    sc_trace(mVcdFile, link_in_1_TLAST, "(port)link_in_1_TLAST");
    sc_trace(mVcdFile, link_in_2_TLAST, "(port)link_in_2_TLAST");
    sc_trace(mVcdFile, link_in_3_TLAST, "(port)link_in_3_TLAST");
    sc_trace(mVcdFile, link_out_0_TDATA, "(port)link_out_0_TDATA");
    sc_trace(mVcdFile, link_out_0_TVALID, "(port)link_out_0_TVALID");
    sc_trace(mVcdFile, link_out_1_TDATA, "(port)link_out_1_TDATA");
    sc_trace(mVcdFile, link_out_1_TVALID, "(port)link_out_1_TVALID");
    sc_trace(mVcdFile, link_out_2_TDATA, "(port)link_out_2_TDATA");
    sc_trace(mVcdFile, link_out_2_TVALID, "(port)link_out_2_TVALID");
    sc_trace(mVcdFile, link_out_3_TDATA, "(port)link_out_3_TDATA");
    sc_trace(mVcdFile, link_out_3_TVALID, "(port)link_out_3_TVALID");
    sc_trace(mVcdFile, link_out_0_TUSER, "(port)link_out_0_TUSER");
    sc_trace(mVcdFile, link_out_1_TUSER, "(port)link_out_1_TUSER");
    sc_trace(mVcdFile, link_out_2_TUSER, "(port)link_out_2_TUSER");
    sc_trace(mVcdFile, link_out_3_TUSER, "(port)link_out_3_TUSER");
    sc_trace(mVcdFile, link_out_0_TLAST, "(port)link_out_0_TLAST");
    sc_trace(mVcdFile, link_out_1_TLAST, "(port)link_out_1_TLAST");
    sc_trace(mVcdFile, link_out_2_TLAST, "(port)link_out_2_TLAST");
    sc_trace(mVcdFile, link_out_3_TLAST, "(port)link_out_3_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_vld_out, "link_in_1_V_data_V_0_vld_out");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_vld_out, "link_in_2_V_data_V_0_vld_out");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_vld_out, "link_in_0_V_data_V_0_vld_out");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_vld_out, "link_in_3_V_data_V_0_vld_out");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_ack_in, "link_out_0_V_data_V_1_ack_in");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_ack_in, "link_out_1_V_data_V_1_ack_in");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_ack_in, "link_out_2_V_data_V_1_ack_in");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_ack_in, "link_out_3_V_data_V_1_ack_in");
    sc_trace(mVcdFile, ap_block_state1_io, "ap_block_state1_io");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_ack_out, "link_out_0_V_data_V_1_ack_out");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_state, "link_out_0_V_data_V_1_state");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_ack_out, "link_out_1_V_data_V_1_ack_out");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_state, "link_out_1_V_data_V_1_state");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_ack_out, "link_out_2_V_data_V_1_ack_out");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_state, "link_out_2_V_data_V_1_state");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_ack_out, "link_out_3_V_data_V_1_ack_out");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_state, "link_out_3_V_data_V_1_state");
    sc_trace(mVcdFile, link_out_0_V_user_V_1_ack_out, "link_out_0_V_user_V_1_ack_out");
    sc_trace(mVcdFile, link_out_0_V_user_V_1_state, "link_out_0_V_user_V_1_state");
    sc_trace(mVcdFile, link_out_1_V_user_V_1_ack_out, "link_out_1_V_user_V_1_ack_out");
    sc_trace(mVcdFile, link_out_1_V_user_V_1_state, "link_out_1_V_user_V_1_state");
    sc_trace(mVcdFile, link_out_2_V_user_V_1_ack_out, "link_out_2_V_user_V_1_ack_out");
    sc_trace(mVcdFile, link_out_2_V_user_V_1_state, "link_out_2_V_user_V_1_state");
    sc_trace(mVcdFile, link_out_3_V_user_V_1_ack_out, "link_out_3_V_user_V_1_ack_out");
    sc_trace(mVcdFile, link_out_3_V_user_V_1_state, "link_out_3_V_user_V_1_state");
    sc_trace(mVcdFile, link_out_0_V_last_V_1_ack_out, "link_out_0_V_last_V_1_ack_out");
    sc_trace(mVcdFile, link_out_0_V_last_V_1_state, "link_out_0_V_last_V_1_state");
    sc_trace(mVcdFile, link_out_1_V_last_V_1_ack_out, "link_out_1_V_last_V_1_ack_out");
    sc_trace(mVcdFile, link_out_1_V_last_V_1_state, "link_out_1_V_last_V_1_state");
    sc_trace(mVcdFile, link_out_2_V_last_V_1_ack_out, "link_out_2_V_last_V_1_ack_out");
    sc_trace(mVcdFile, link_out_2_V_last_V_1_state, "link_out_2_V_last_V_1_state");
    sc_trace(mVcdFile, link_out_3_V_last_V_1_ack_out, "link_out_3_V_last_V_1_ack_out");
    sc_trace(mVcdFile, link_out_3_V_last_V_1_state, "link_out_3_V_last_V_1_state");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_data_out, "link_in_0_V_data_V_0_data_out");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_vld_in, "link_in_0_V_data_V_0_vld_in");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_ack_in, "link_in_0_V_data_V_0_ack_in");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_ack_out, "link_in_0_V_data_V_0_ack_out");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_payload_A, "link_in_0_V_data_V_0_payload_A");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_payload_B, "link_in_0_V_data_V_0_payload_B");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_sel_rd, "link_in_0_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_sel_wr, "link_in_0_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_sel, "link_in_0_V_data_V_0_sel");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_load_A, "link_in_0_V_data_V_0_load_A");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_load_B, "link_in_0_V_data_V_0_load_B");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_state, "link_in_0_V_data_V_0_state");
    sc_trace(mVcdFile, link_in_0_V_data_V_0_state_cmp_full, "link_in_0_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_data_out, "link_in_1_V_data_V_0_data_out");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_vld_in, "link_in_1_V_data_V_0_vld_in");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_ack_in, "link_in_1_V_data_V_0_ack_in");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_ack_out, "link_in_1_V_data_V_0_ack_out");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_payload_A, "link_in_1_V_data_V_0_payload_A");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_payload_B, "link_in_1_V_data_V_0_payload_B");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_sel_rd, "link_in_1_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_sel_wr, "link_in_1_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_sel, "link_in_1_V_data_V_0_sel");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_load_A, "link_in_1_V_data_V_0_load_A");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_load_B, "link_in_1_V_data_V_0_load_B");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_state, "link_in_1_V_data_V_0_state");
    sc_trace(mVcdFile, link_in_1_V_data_V_0_state_cmp_full, "link_in_1_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_data_out, "link_in_2_V_data_V_0_data_out");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_vld_in, "link_in_2_V_data_V_0_vld_in");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_ack_in, "link_in_2_V_data_V_0_ack_in");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_ack_out, "link_in_2_V_data_V_0_ack_out");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_payload_A, "link_in_2_V_data_V_0_payload_A");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_payload_B, "link_in_2_V_data_V_0_payload_B");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_sel_rd, "link_in_2_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_sel_wr, "link_in_2_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_sel, "link_in_2_V_data_V_0_sel");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_load_A, "link_in_2_V_data_V_0_load_A");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_load_B, "link_in_2_V_data_V_0_load_B");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_state, "link_in_2_V_data_V_0_state");
    sc_trace(mVcdFile, link_in_2_V_data_V_0_state_cmp_full, "link_in_2_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_data_out, "link_in_3_V_data_V_0_data_out");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_vld_in, "link_in_3_V_data_V_0_vld_in");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_ack_in, "link_in_3_V_data_V_0_ack_in");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_ack_out, "link_in_3_V_data_V_0_ack_out");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_payload_A, "link_in_3_V_data_V_0_payload_A");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_payload_B, "link_in_3_V_data_V_0_payload_B");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_sel_rd, "link_in_3_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_sel_wr, "link_in_3_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_sel, "link_in_3_V_data_V_0_sel");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_load_A, "link_in_3_V_data_V_0_load_A");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_load_B, "link_in_3_V_data_V_0_load_B");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_state, "link_in_3_V_data_V_0_state");
    sc_trace(mVcdFile, link_in_3_V_data_V_0_state_cmp_full, "link_in_3_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, link_in_0_V_last_V_0_vld_in, "link_in_0_V_last_V_0_vld_in");
    sc_trace(mVcdFile, link_in_0_V_last_V_0_ack_out, "link_in_0_V_last_V_0_ack_out");
    sc_trace(mVcdFile, link_in_0_V_last_V_0_state, "link_in_0_V_last_V_0_state");
    sc_trace(mVcdFile, link_in_1_V_last_V_0_vld_in, "link_in_1_V_last_V_0_vld_in");
    sc_trace(mVcdFile, link_in_1_V_last_V_0_ack_out, "link_in_1_V_last_V_0_ack_out");
    sc_trace(mVcdFile, link_in_1_V_last_V_0_state, "link_in_1_V_last_V_0_state");
    sc_trace(mVcdFile, link_in_2_V_last_V_0_vld_in, "link_in_2_V_last_V_0_vld_in");
    sc_trace(mVcdFile, link_in_2_V_last_V_0_ack_out, "link_in_2_V_last_V_0_ack_out");
    sc_trace(mVcdFile, link_in_2_V_last_V_0_state, "link_in_2_V_last_V_0_state");
    sc_trace(mVcdFile, link_in_3_V_last_V_0_vld_in, "link_in_3_V_last_V_0_vld_in");
    sc_trace(mVcdFile, link_in_3_V_last_V_0_ack_out, "link_in_3_V_last_V_0_ack_out");
    sc_trace(mVcdFile, link_in_3_V_last_V_0_state, "link_in_3_V_last_V_0_state");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_data_out, "link_out_0_V_data_V_1_data_out");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_vld_in, "link_out_0_V_data_V_1_vld_in");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_vld_out, "link_out_0_V_data_V_1_vld_out");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_payload_A, "link_out_0_V_data_V_1_payload_A");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_payload_B, "link_out_0_V_data_V_1_payload_B");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_sel_rd, "link_out_0_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_sel_wr, "link_out_0_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_sel, "link_out_0_V_data_V_1_sel");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_load_A, "link_out_0_V_data_V_1_load_A");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_load_B, "link_out_0_V_data_V_1_load_B");
    sc_trace(mVcdFile, link_out_0_V_data_V_1_state_cmp_full, "link_out_0_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_data_out, "link_out_1_V_data_V_1_data_out");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_vld_in, "link_out_1_V_data_V_1_vld_in");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_vld_out, "link_out_1_V_data_V_1_vld_out");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_payload_A, "link_out_1_V_data_V_1_payload_A");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_payload_B, "link_out_1_V_data_V_1_payload_B");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_sel_rd, "link_out_1_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_sel_wr, "link_out_1_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_sel, "link_out_1_V_data_V_1_sel");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_load_A, "link_out_1_V_data_V_1_load_A");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_load_B, "link_out_1_V_data_V_1_load_B");
    sc_trace(mVcdFile, link_out_1_V_data_V_1_state_cmp_full, "link_out_1_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_data_out, "link_out_2_V_data_V_1_data_out");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_vld_in, "link_out_2_V_data_V_1_vld_in");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_vld_out, "link_out_2_V_data_V_1_vld_out");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_payload_A, "link_out_2_V_data_V_1_payload_A");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_payload_B, "link_out_2_V_data_V_1_payload_B");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_sel_rd, "link_out_2_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_sel_wr, "link_out_2_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_sel, "link_out_2_V_data_V_1_sel");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_load_A, "link_out_2_V_data_V_1_load_A");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_load_B, "link_out_2_V_data_V_1_load_B");
    sc_trace(mVcdFile, link_out_2_V_data_V_1_state_cmp_full, "link_out_2_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_data_out, "link_out_3_V_data_V_1_data_out");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_vld_in, "link_out_3_V_data_V_1_vld_in");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_vld_out, "link_out_3_V_data_V_1_vld_out");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_payload_A, "link_out_3_V_data_V_1_payload_A");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_payload_B, "link_out_3_V_data_V_1_payload_B");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_sel_rd, "link_out_3_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_sel_wr, "link_out_3_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_sel, "link_out_3_V_data_V_1_sel");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_load_A, "link_out_3_V_data_V_1_load_A");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_load_B, "link_out_3_V_data_V_1_load_B");
    sc_trace(mVcdFile, link_out_3_V_data_V_1_state_cmp_full, "link_out_3_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, link_out_0_V_user_V_1_data_out, "link_out_0_V_user_V_1_data_out");
    sc_trace(mVcdFile, link_out_0_V_user_V_1_vld_in, "link_out_0_V_user_V_1_vld_in");
    sc_trace(mVcdFile, link_out_0_V_user_V_1_vld_out, "link_out_0_V_user_V_1_vld_out");
    sc_trace(mVcdFile, link_out_0_V_user_V_1_sel_rd, "link_out_0_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_0_V_user_V_1_sel, "link_out_0_V_user_V_1_sel");
    sc_trace(mVcdFile, link_out_1_V_user_V_1_data_out, "link_out_1_V_user_V_1_data_out");
    sc_trace(mVcdFile, link_out_1_V_user_V_1_vld_in, "link_out_1_V_user_V_1_vld_in");
    sc_trace(mVcdFile, link_out_1_V_user_V_1_vld_out, "link_out_1_V_user_V_1_vld_out");
    sc_trace(mVcdFile, link_out_1_V_user_V_1_sel_rd, "link_out_1_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_1_V_user_V_1_sel, "link_out_1_V_user_V_1_sel");
    sc_trace(mVcdFile, link_out_2_V_user_V_1_data_out, "link_out_2_V_user_V_1_data_out");
    sc_trace(mVcdFile, link_out_2_V_user_V_1_vld_in, "link_out_2_V_user_V_1_vld_in");
    sc_trace(mVcdFile, link_out_2_V_user_V_1_vld_out, "link_out_2_V_user_V_1_vld_out");
    sc_trace(mVcdFile, link_out_2_V_user_V_1_sel_rd, "link_out_2_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_2_V_user_V_1_sel, "link_out_2_V_user_V_1_sel");
    sc_trace(mVcdFile, link_out_3_V_user_V_1_data_out, "link_out_3_V_user_V_1_data_out");
    sc_trace(mVcdFile, link_out_3_V_user_V_1_vld_in, "link_out_3_V_user_V_1_vld_in");
    sc_trace(mVcdFile, link_out_3_V_user_V_1_vld_out, "link_out_3_V_user_V_1_vld_out");
    sc_trace(mVcdFile, link_out_3_V_user_V_1_sel_rd, "link_out_3_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_3_V_user_V_1_sel, "link_out_3_V_user_V_1_sel");
    sc_trace(mVcdFile, link_out_0_V_last_V_1_data_out, "link_out_0_V_last_V_1_data_out");
    sc_trace(mVcdFile, link_out_0_V_last_V_1_vld_in, "link_out_0_V_last_V_1_vld_in");
    sc_trace(mVcdFile, link_out_0_V_last_V_1_vld_out, "link_out_0_V_last_V_1_vld_out");
    sc_trace(mVcdFile, link_out_0_V_last_V_1_sel_rd, "link_out_0_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_0_V_last_V_1_sel, "link_out_0_V_last_V_1_sel");
    sc_trace(mVcdFile, link_out_1_V_last_V_1_data_out, "link_out_1_V_last_V_1_data_out");
    sc_trace(mVcdFile, link_out_1_V_last_V_1_vld_in, "link_out_1_V_last_V_1_vld_in");
    sc_trace(mVcdFile, link_out_1_V_last_V_1_vld_out, "link_out_1_V_last_V_1_vld_out");
    sc_trace(mVcdFile, link_out_1_V_last_V_1_sel_rd, "link_out_1_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_1_V_last_V_1_sel, "link_out_1_V_last_V_1_sel");
    sc_trace(mVcdFile, link_out_2_V_last_V_1_data_out, "link_out_2_V_last_V_1_data_out");
    sc_trace(mVcdFile, link_out_2_V_last_V_1_vld_in, "link_out_2_V_last_V_1_vld_in");
    sc_trace(mVcdFile, link_out_2_V_last_V_1_vld_out, "link_out_2_V_last_V_1_vld_out");
    sc_trace(mVcdFile, link_out_2_V_last_V_1_sel_rd, "link_out_2_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_2_V_last_V_1_sel, "link_out_2_V_last_V_1_sel");
    sc_trace(mVcdFile, link_out_3_V_last_V_1_data_out, "link_out_3_V_last_V_1_data_out");
    sc_trace(mVcdFile, link_out_3_V_last_V_1_vld_in, "link_out_3_V_last_V_1_vld_in");
    sc_trace(mVcdFile, link_out_3_V_last_V_1_vld_out, "link_out_3_V_last_V_1_vld_out");
    sc_trace(mVcdFile, link_out_3_V_last_V_1_sel_rd, "link_out_3_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, link_out_3_V_last_V_1_sel, "link_out_3_V_last_V_1_sel");
    sc_trace(mVcdFile, link_in_0_TDATA_blk_n, "link_in_0_TDATA_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, link_in_1_TDATA_blk_n, "link_in_1_TDATA_blk_n");
    sc_trace(mVcdFile, link_in_2_TDATA_blk_n, "link_in_2_TDATA_blk_n");
    sc_trace(mVcdFile, link_in_3_TDATA_blk_n, "link_in_3_TDATA_blk_n");
    sc_trace(mVcdFile, link_out_0_TDATA_blk_n, "link_out_0_TDATA_blk_n");
    sc_trace(mVcdFile, link_out_1_TDATA_blk_n, "link_out_1_TDATA_blk_n");
    sc_trace(mVcdFile, link_out_2_TDATA_blk_n, "link_out_2_TDATA_blk_n");
    sc_trace(mVcdFile, link_out_3_TDATA_blk_n, "link_out_3_TDATA_blk_n");
    sc_trace(mVcdFile, tmp_data_V_4_fu_837_p5, "tmp_data_V_4_fu_837_p5");
    sc_trace(mVcdFile, tmp_data_V_5_fu_888_p5, "tmp_data_V_5_fu_888_p5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_ready, "call_ret_stitchInPhi_fu_250_ap_ready");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read, "call_ret_stitchInPhi_fu_250_p_read");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read1, "call_ret_stitchInPhi_fu_250_p_read1");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read2, "call_ret_stitchInPhi_fu_250_p_read2");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read3, "call_ret_stitchInPhi_fu_250_p_read3");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read4, "call_ret_stitchInPhi_fu_250_p_read4");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read5, "call_ret_stitchInPhi_fu_250_p_read5");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read6, "call_ret_stitchInPhi_fu_250_p_read6");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read7, "call_ret_stitchInPhi_fu_250_p_read7");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read8, "call_ret_stitchInPhi_fu_250_p_read8");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read9, "call_ret_stitchInPhi_fu_250_p_read9");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read10, "call_ret_stitchInPhi_fu_250_p_read10");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read11, "call_ret_stitchInPhi_fu_250_p_read11");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read12, "call_ret_stitchInPhi_fu_250_p_read12");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read13, "call_ret_stitchInPhi_fu_250_p_read13");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read14, "call_ret_stitchInPhi_fu_250_p_read14");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read15, "call_ret_stitchInPhi_fu_250_p_read15");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read16, "call_ret_stitchInPhi_fu_250_p_read16");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read17, "call_ret_stitchInPhi_fu_250_p_read17");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read18, "call_ret_stitchInPhi_fu_250_p_read18");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read19, "call_ret_stitchInPhi_fu_250_p_read19");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read20, "call_ret_stitchInPhi_fu_250_p_read20");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read21, "call_ret_stitchInPhi_fu_250_p_read21");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read22, "call_ret_stitchInPhi_fu_250_p_read22");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read23, "call_ret_stitchInPhi_fu_250_p_read23");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read24, "call_ret_stitchInPhi_fu_250_p_read24");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read25, "call_ret_stitchInPhi_fu_250_p_read25");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read26, "call_ret_stitchInPhi_fu_250_p_read26");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read27, "call_ret_stitchInPhi_fu_250_p_read27");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read28, "call_ret_stitchInPhi_fu_250_p_read28");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read29, "call_ret_stitchInPhi_fu_250_p_read29");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read30, "call_ret_stitchInPhi_fu_250_p_read30");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read31, "call_ret_stitchInPhi_fu_250_p_read31");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read32, "call_ret_stitchInPhi_fu_250_p_read32");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_p_read33, "call_ret_stitchInPhi_fu_250_p_read33");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_0, "call_ret_stitchInPhi_fu_250_ap_return_0");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_1, "call_ret_stitchInPhi_fu_250_ap_return_1");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_2, "call_ret_stitchInPhi_fu_250_ap_return_2");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_3, "call_ret_stitchInPhi_fu_250_ap_return_3");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_4, "call_ret_stitchInPhi_fu_250_ap_return_4");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_5, "call_ret_stitchInPhi_fu_250_ap_return_5");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_6, "call_ret_stitchInPhi_fu_250_ap_return_6");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_7, "call_ret_stitchInPhi_fu_250_ap_return_7");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_8, "call_ret_stitchInPhi_fu_250_ap_return_8");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_9, "call_ret_stitchInPhi_fu_250_ap_return_9");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_10, "call_ret_stitchInPhi_fu_250_ap_return_10");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_11, "call_ret_stitchInPhi_fu_250_ap_return_11");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_12, "call_ret_stitchInPhi_fu_250_ap_return_12");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_13, "call_ret_stitchInPhi_fu_250_ap_return_13");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_14, "call_ret_stitchInPhi_fu_250_ap_return_14");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_15, "call_ret_stitchInPhi_fu_250_ap_return_15");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_16, "call_ret_stitchInPhi_fu_250_ap_return_16");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_17, "call_ret_stitchInPhi_fu_250_ap_return_17");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_18, "call_ret_stitchInPhi_fu_250_ap_return_18");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_19, "call_ret_stitchInPhi_fu_250_ap_return_19");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_20, "call_ret_stitchInPhi_fu_250_ap_return_20");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_21, "call_ret_stitchInPhi_fu_250_ap_return_21");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_22, "call_ret_stitchInPhi_fu_250_ap_return_22");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_23, "call_ret_stitchInPhi_fu_250_ap_return_23");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_24, "call_ret_stitchInPhi_fu_250_ap_return_24");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_25, "call_ret_stitchInPhi_fu_250_ap_return_25");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_26, "call_ret_stitchInPhi_fu_250_ap_return_26");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_27, "call_ret_stitchInPhi_fu_250_ap_return_27");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_28, "call_ret_stitchInPhi_fu_250_ap_return_28");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_29, "call_ret_stitchInPhi_fu_250_ap_return_29");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_30, "call_ret_stitchInPhi_fu_250_ap_return_30");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_31, "call_ret_stitchInPhi_fu_250_ap_return_31");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_32, "call_ret_stitchInPhi_fu_250_ap_return_32");
    sc_trace(mVcdFile, call_ret_stitchInPhi_fu_250_ap_return_33, "call_ret_stitchInPhi_fu_250_ap_return_33");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_fu_799_p18, "tmp_fu_799_p18");
    sc_trace(mVcdFile, tmp_1_fu_850_p18, "tmp_1_fu_850_p18");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("towerMerge_top.hdltvin.dat");
    mHdltvoutHandle.open("towerMerge_top.hdltvout.dat");
}

towerMerge_top::~towerMerge_top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete call_ret_stitchInPhi_fu_250;
}

void towerMerge_top::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_0_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_vld_out.read()))) {
            link_in_0_V_data_V_0_sel_rd =  (sc_logic) (~link_in_0_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_0_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_ack_in.read()))) {
            link_in_0_V_data_V_0_sel_wr =  (sc_logic) (~link_in_0_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_0_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, link_in_0_V_data_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, link_in_0_V_data_V_0_state.read())))) {
            link_in_0_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_in_0_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_0_V_data_V_0_state.read())))) {
            link_in_0_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, link_in_0_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_0_V_data_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_in_0_V_data_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_ack_out.read()))))) {
            link_in_0_V_data_V_0_state = ap_const_lv2_3;
        } else {
            link_in_0_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_0_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, link_in_0_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, link_in_0_V_last_V_0_state.read())))) {
            link_in_0_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_in_0_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_0_V_last_V_0_state.read())))) {
            link_in_0_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, link_in_0_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_0_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_in_0_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_last_V_0_ack_out.read()))))) {
            link_in_0_V_last_V_0_state = ap_const_lv2_3;
        } else {
            link_in_0_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_1_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_vld_out.read()))) {
            link_in_1_V_data_V_0_sel_rd =  (sc_logic) (~link_in_1_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_1_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_ack_in.read()))) {
            link_in_1_V_data_V_0_sel_wr =  (sc_logic) (~link_in_1_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_1_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, link_in_1_V_data_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, link_in_1_V_data_V_0_state.read())))) {
            link_in_1_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_in_1_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_1_V_data_V_0_state.read())))) {
            link_in_1_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, link_in_1_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_1_V_data_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_in_1_V_data_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_ack_out.read()))))) {
            link_in_1_V_data_V_0_state = ap_const_lv2_3;
        } else {
            link_in_1_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_1_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, link_in_1_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, link_in_1_V_last_V_0_state.read())))) {
            link_in_1_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_in_1_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_1_V_last_V_0_state.read())))) {
            link_in_1_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, link_in_1_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_1_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_in_1_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_last_V_0_ack_out.read()))))) {
            link_in_1_V_last_V_0_state = ap_const_lv2_3;
        } else {
            link_in_1_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_2_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_vld_out.read()))) {
            link_in_2_V_data_V_0_sel_rd =  (sc_logic) (~link_in_2_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_2_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_ack_in.read()))) {
            link_in_2_V_data_V_0_sel_wr =  (sc_logic) (~link_in_2_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_2_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, link_in_2_V_data_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, link_in_2_V_data_V_0_state.read())))) {
            link_in_2_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_in_2_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_2_V_data_V_0_state.read())))) {
            link_in_2_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, link_in_2_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_2_V_data_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_in_2_V_data_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_ack_out.read()))))) {
            link_in_2_V_data_V_0_state = ap_const_lv2_3;
        } else {
            link_in_2_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_2_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, link_in_2_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, link_in_2_V_last_V_0_state.read())))) {
            link_in_2_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_in_2_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_2_V_last_V_0_state.read())))) {
            link_in_2_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, link_in_2_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_2_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_in_2_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_last_V_0_ack_out.read()))))) {
            link_in_2_V_last_V_0_state = ap_const_lv2_3;
        } else {
            link_in_2_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_3_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_vld_out.read()))) {
            link_in_3_V_data_V_0_sel_rd =  (sc_logic) (~link_in_3_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_3_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_ack_in.read()))) {
            link_in_3_V_data_V_0_sel_wr =  (sc_logic) (~link_in_3_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_3_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, link_in_3_V_data_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, link_in_3_V_data_V_0_state.read())))) {
            link_in_3_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_in_3_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_3_V_data_V_0_state.read())))) {
            link_in_3_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, link_in_3_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_3_V_data_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_in_3_V_data_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_ack_out.read()))))) {
            link_in_3_V_data_V_0_state = ap_const_lv2_3;
        } else {
            link_in_3_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_in_3_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, link_in_3_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, link_in_3_V_last_V_0_state.read())))) {
            link_in_3_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_in_3_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_3_V_last_V_0_state.read())))) {
            link_in_3_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, link_in_3_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_in_3_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_in_3_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_last_V_0_ack_out.read()))))) {
            link_in_3_V_last_V_0_state = ap_const_lv2_3;
        } else {
            link_in_3_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_0_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_vld_out.read()))) {
            link_out_0_V_data_V_1_sel_rd =  (sc_logic) (~link_out_0_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_0_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_ack_in.read()))) {
            link_out_0_V_data_V_1_sel_wr =  (sc_logic) (~link_out_0_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_0_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_3) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_2) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_data_V_1_vld_in.read())))) {
            link_out_0_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
                     esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_3) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
                     esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_1)))) {
            link_out_0_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_2) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_ack_out.read()))))) {
            link_out_0_V_data_V_1_state = ap_const_lv2_3;
        } else {
            link_out_0_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_0_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_last_V_1_vld_out.read()))) {
            link_out_0_V_last_V_1_sel_rd =  (sc_logic) (~link_out_0_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_0_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_last_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_last_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_0_V_last_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_last_V_1_vld_in.read())))) {
            link_out_0_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_last_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_last_V_1_state.read())))) {
            link_out_0_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_0_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_last_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_last_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_last_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_last_V_1_ack_out.read()))))) {
            link_out_0_V_last_V_1_state = ap_const_lv2_3;
        } else {
            link_out_0_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_0_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_user_V_1_vld_out.read()))) {
            link_out_0_V_user_V_1_sel_rd =  (sc_logic) (~link_out_0_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_0_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_user_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_user_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_0_V_user_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_user_V_1_vld_in.read())))) {
            link_out_0_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_user_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_user_V_1_state.read())))) {
            link_out_0_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_0_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_user_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_user_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_user_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_user_V_1_ack_out.read()))))) {
            link_out_0_V_user_V_1_state = ap_const_lv2_3;
        } else {
            link_out_0_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_1_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_vld_out.read()))) {
            link_out_1_V_data_V_1_sel_rd =  (sc_logic) (~link_out_1_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_1_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_ack_in.read()))) {
            link_out_1_V_data_V_1_sel_wr =  (sc_logic) (~link_out_1_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_1_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_data_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_1_V_data_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_data_V_1_vld_in.read())))) {
            link_out_1_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_data_V_1_state.read())))) {
            link_out_1_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_1_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_ack_out.read()))))) {
            link_out_1_V_data_V_1_state = ap_const_lv2_3;
        } else {
            link_out_1_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_1_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_last_V_1_vld_out.read()))) {
            link_out_1_V_last_V_1_sel_rd =  (sc_logic) (~link_out_1_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_1_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_last_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_last_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_1_V_last_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_last_V_1_vld_in.read())))) {
            link_out_1_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_last_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_last_V_1_state.read())))) {
            link_out_1_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_1_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_last_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_last_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_last_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_last_V_1_ack_out.read()))))) {
            link_out_1_V_last_V_1_state = ap_const_lv2_3;
        } else {
            link_out_1_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_1_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_user_V_1_vld_out.read()))) {
            link_out_1_V_user_V_1_sel_rd =  (sc_logic) (~link_out_1_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_1_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_user_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_user_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_1_V_user_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_user_V_1_vld_in.read())))) {
            link_out_1_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_user_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_user_V_1_state.read())))) {
            link_out_1_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_1_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_user_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_user_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_user_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_user_V_1_ack_out.read()))))) {
            link_out_1_V_user_V_1_state = ap_const_lv2_3;
        } else {
            link_out_1_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_2_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_vld_out.read()))) {
            link_out_2_V_data_V_1_sel_rd =  (sc_logic) (~link_out_2_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_2_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_ack_in.read()))) {
            link_out_2_V_data_V_1_sel_wr =  (sc_logic) (~link_out_2_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_2_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_data_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_2_V_data_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_data_V_1_vld_in.read())))) {
            link_out_2_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_data_V_1_state.read())))) {
            link_out_2_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_2_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_ack_out.read()))))) {
            link_out_2_V_data_V_1_state = ap_const_lv2_3;
        } else {
            link_out_2_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_2_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_last_V_1_vld_out.read()))) {
            link_out_2_V_last_V_1_sel_rd =  (sc_logic) (~link_out_2_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_2_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_last_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_last_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_2_V_last_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_last_V_1_vld_in.read())))) {
            link_out_2_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_last_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_last_V_1_state.read())))) {
            link_out_2_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_2_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_last_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_last_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_last_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_last_V_1_ack_out.read()))))) {
            link_out_2_V_last_V_1_state = ap_const_lv2_3;
        } else {
            link_out_2_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_2_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_user_V_1_vld_out.read()))) {
            link_out_2_V_user_V_1_sel_rd =  (sc_logic) (~link_out_2_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_2_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_user_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_user_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_2_V_user_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_user_V_1_vld_in.read())))) {
            link_out_2_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_user_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_user_V_1_state.read())))) {
            link_out_2_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_2_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_user_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_user_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_user_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_user_V_1_ack_out.read()))))) {
            link_out_2_V_user_V_1_state = ap_const_lv2_3;
        } else {
            link_out_2_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_3_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_vld_out.read()))) {
            link_out_3_V_data_V_1_sel_rd =  (sc_logic) (~link_out_3_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_3_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_ack_in.read()))) {
            link_out_3_V_data_V_1_sel_wr =  (sc_logic) (~link_out_3_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_3_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_data_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_3_V_data_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_data_V_1_vld_in.read())))) {
            link_out_3_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_data_V_1_state.read())))) {
            link_out_3_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_3_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_ack_out.read()))))) {
            link_out_3_V_data_V_1_state = ap_const_lv2_3;
        } else {
            link_out_3_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_3_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_last_V_1_vld_out.read()))) {
            link_out_3_V_last_V_1_sel_rd =  (sc_logic) (~link_out_3_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_3_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_last_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_last_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_3_V_last_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_last_V_1_vld_in.read())))) {
            link_out_3_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_last_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_last_V_1_state.read())))) {
            link_out_3_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_3_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_last_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_last_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_last_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_last_V_1_ack_out.read()))))) {
            link_out_3_V_last_V_1_state = ap_const_lv2_3;
        } else {
            link_out_3_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_3_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_user_V_1_vld_out.read()))) {
            link_out_3_V_user_V_1_sel_rd =  (sc_logic) (~link_out_3_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        link_out_3_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_user_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_user_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, link_out_3_V_user_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_user_V_1_vld_in.read())))) {
            link_out_3_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_user_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_user_V_1_state.read())))) {
            link_out_3_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, link_out_3_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_user_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_user_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_user_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_user_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_user_V_1_ack_out.read()))))) {
            link_out_3_V_user_V_1_state = ap_const_lv2_3;
        } else {
            link_out_3_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_load_A.read())) {
        link_in_0_V_data_V_0_payload_A = link_in_0_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_load_B.read())) {
        link_in_0_V_data_V_0_payload_B = link_in_0_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_load_A.read())) {
        link_in_1_V_data_V_0_payload_A = link_in_1_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_load_B.read())) {
        link_in_1_V_data_V_0_payload_B = link_in_1_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_load_A.read())) {
        link_in_2_V_data_V_0_payload_A = link_in_2_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_load_B.read())) {
        link_in_2_V_data_V_0_payload_B = link_in_2_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_load_A.read())) {
        link_in_3_V_data_V_0_payload_A = link_in_3_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_load_B.read())) {
        link_in_3_V_data_V_0_payload_B = link_in_3_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_load_A.read())) {
        link_out_0_V_data_V_1_payload_A = link_in_0_V_data_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_load_B.read())) {
        link_out_0_V_data_V_1_payload_B = link_in_0_V_data_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_load_A.read())) {
        link_out_1_V_data_V_1_payload_A = tmp_data_V_4_fu_837_p5.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_load_B.read())) {
        link_out_1_V_data_V_1_payload_B = tmp_data_V_4_fu_837_p5.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_load_A.read())) {
        link_out_2_V_data_V_1_payload_A = tmp_data_V_5_fu_888_p5.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_load_B.read())) {
        link_out_2_V_data_V_1_payload_B = tmp_data_V_5_fu_888_p5.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_load_A.read())) {
        link_out_3_V_data_V_1_payload_A = link_in_3_V_data_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_load_B.read())) {
        link_out_3_V_data_V_1_payload_B = link_in_3_V_data_V_0_data_out.read();
    }
}

void towerMerge_top::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void towerMerge_top::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void towerMerge_top::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_data_V_0_vld_out.read()))) || ((esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
    esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_last_V_1_state.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void towerMerge_top::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state1_io.read()))) || ((esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
    esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void towerMerge_top::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_data_V_0_vld_out.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state1_io.read()))) || ((esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
    esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_user_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_user_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void towerMerge_top::thread_ap_block_state1_io() {
    ap_block_state1_io = (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_data_V_1_ack_in.read()));
}

void towerMerge_top::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, link_in_1_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, link_in_2_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, link_in_0_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, link_in_3_V_data_V_0_vld_out.read()));
}

void towerMerge_top::thread_ap_block_state2_io() {
    ap_block_state2_io = (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_V_data_V_1_ack_in.read()));
}

void towerMerge_top::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = (esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
  esl_seteq<1,2,2>(link_out_0_V_data_V_1_state.read(), ap_const_lv2_3)) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_data_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_data_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_data_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_data_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_data_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_data_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_user_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_user_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_user_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_user_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_user_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_user_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_user_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_user_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_0_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_0_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_0_V_last_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_1_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_1_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_1_V_last_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_2_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_2_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_2_V_last_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, link_out_3_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, link_out_3_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, link_out_3_V_last_V_1_state.read())));
}

void towerMerge_top::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void towerMerge_top::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void towerMerge_top::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void towerMerge_top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void towerMerge_top::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void towerMerge_top::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void towerMerge_top::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void towerMerge_top::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void towerMerge_top::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read() {
    call_ret_stitchInPhi_fu_250_p_read = link_in_1_V_data_V_0_data_out.read().range(32-1, 0);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read1() {
    call_ret_stitchInPhi_fu_250_p_read1 = link_in_1_V_data_V_0_data_out.read().range(63, 32);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read10() {
    call_ret_stitchInPhi_fu_250_p_read10 = link_in_1_V_data_V_0_data_out.read().range(351, 320);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read11() {
    call_ret_stitchInPhi_fu_250_p_read11 = link_in_1_V_data_V_0_data_out.read().range(383, 352);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read12() {
    call_ret_stitchInPhi_fu_250_p_read12 = link_in_1_V_data_V_0_data_out.read().range(415, 384);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read13() {
    call_ret_stitchInPhi_fu_250_p_read13 = link_in_1_V_data_V_0_data_out.read().range(447, 416);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read14() {
    call_ret_stitchInPhi_fu_250_p_read14 = link_in_1_V_data_V_0_data_out.read().range(479, 448);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read15() {
    call_ret_stitchInPhi_fu_250_p_read15 = link_in_1_V_data_V_0_data_out.read().range(511, 480);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read16() {
    call_ret_stitchInPhi_fu_250_p_read16 = link_in_1_V_data_V_0_data_out.read().range(543, 512);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read17() {
    call_ret_stitchInPhi_fu_250_p_read17 = link_in_2_V_data_V_0_data_out.read().range(32-1, 0);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read18() {
    call_ret_stitchInPhi_fu_250_p_read18 = link_in_2_V_data_V_0_data_out.read().range(63, 32);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read19() {
    call_ret_stitchInPhi_fu_250_p_read19 = link_in_2_V_data_V_0_data_out.read().range(95, 64);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read2() {
    call_ret_stitchInPhi_fu_250_p_read2 = link_in_1_V_data_V_0_data_out.read().range(95, 64);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read20() {
    call_ret_stitchInPhi_fu_250_p_read20 = link_in_2_V_data_V_0_data_out.read().range(127, 96);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read21() {
    call_ret_stitchInPhi_fu_250_p_read21 = link_in_2_V_data_V_0_data_out.read().range(159, 128);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read22() {
    call_ret_stitchInPhi_fu_250_p_read22 = link_in_2_V_data_V_0_data_out.read().range(191, 160);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read23() {
    call_ret_stitchInPhi_fu_250_p_read23 = link_in_2_V_data_V_0_data_out.read().range(223, 192);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read24() {
    call_ret_stitchInPhi_fu_250_p_read24 = link_in_2_V_data_V_0_data_out.read().range(255, 224);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read25() {
    call_ret_stitchInPhi_fu_250_p_read25 = link_in_2_V_data_V_0_data_out.read().range(287, 256);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read26() {
    call_ret_stitchInPhi_fu_250_p_read26 = link_in_2_V_data_V_0_data_out.read().range(319, 288);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read27() {
    call_ret_stitchInPhi_fu_250_p_read27 = link_in_2_V_data_V_0_data_out.read().range(351, 320);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read28() {
    call_ret_stitchInPhi_fu_250_p_read28 = link_in_2_V_data_V_0_data_out.read().range(383, 352);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read29() {
    call_ret_stitchInPhi_fu_250_p_read29 = link_in_2_V_data_V_0_data_out.read().range(415, 384);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read3() {
    call_ret_stitchInPhi_fu_250_p_read3 = link_in_1_V_data_V_0_data_out.read().range(127, 96);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read30() {
    call_ret_stitchInPhi_fu_250_p_read30 = link_in_2_V_data_V_0_data_out.read().range(447, 416);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read31() {
    call_ret_stitchInPhi_fu_250_p_read31 = link_in_2_V_data_V_0_data_out.read().range(479, 448);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read32() {
    call_ret_stitchInPhi_fu_250_p_read32 = link_in_2_V_data_V_0_data_out.read().range(511, 480);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read33() {
    call_ret_stitchInPhi_fu_250_p_read33 = link_in_2_V_data_V_0_data_out.read().range(543, 512);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read4() {
    call_ret_stitchInPhi_fu_250_p_read4 = link_in_1_V_data_V_0_data_out.read().range(159, 128);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read5() {
    call_ret_stitchInPhi_fu_250_p_read5 = link_in_1_V_data_V_0_data_out.read().range(191, 160);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read6() {
    call_ret_stitchInPhi_fu_250_p_read6 = link_in_1_V_data_V_0_data_out.read().range(223, 192);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read7() {
    call_ret_stitchInPhi_fu_250_p_read7 = link_in_1_V_data_V_0_data_out.read().range(255, 224);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read8() {
    call_ret_stitchInPhi_fu_250_p_read8 = link_in_1_V_data_V_0_data_out.read().range(287, 256);
}

void towerMerge_top::thread_call_ret_stitchInPhi_fu_250_p_read9() {
    call_ret_stitchInPhi_fu_250_p_read9 = link_in_1_V_data_V_0_data_out.read().range(319, 288);
}

void towerMerge_top::thread_link_in_0_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        link_in_0_TDATA_blk_n = link_in_0_V_data_V_0_state.read()[0];
    } else {
        link_in_0_TDATA_blk_n = ap_const_logic_1;
    }
}

void towerMerge_top::thread_link_in_0_TREADY() {
    link_in_0_TREADY = link_in_0_V_last_V_0_state.read()[1];
}

void towerMerge_top::thread_link_in_0_V_data_V_0_ack_in() {
    link_in_0_V_data_V_0_ack_in = link_in_0_V_data_V_0_state.read()[1];
}

void towerMerge_top::thread_link_in_0_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_in_0_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        link_in_0_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_in_0_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_0_V_data_V_0_sel.read())) {
        link_in_0_V_data_V_0_data_out = link_in_0_V_data_V_0_payload_B.read();
    } else {
        link_in_0_V_data_V_0_data_out = link_in_0_V_data_V_0_payload_A.read();
    }
}

void towerMerge_top::thread_link_in_0_V_data_V_0_load_A() {
    link_in_0_V_data_V_0_load_A = (link_in_0_V_data_V_0_state_cmp_full.read() & ~link_in_0_V_data_V_0_sel_wr.read());
}

void towerMerge_top::thread_link_in_0_V_data_V_0_load_B() {
    link_in_0_V_data_V_0_load_B = (link_in_0_V_data_V_0_sel_wr.read() & link_in_0_V_data_V_0_state_cmp_full.read());
}

void towerMerge_top::thread_link_in_0_V_data_V_0_sel() {
    link_in_0_V_data_V_0_sel = link_in_0_V_data_V_0_sel_rd.read();
}

void towerMerge_top::thread_link_in_0_V_data_V_0_state_cmp_full() {
    link_in_0_V_data_V_0_state_cmp_full =  (sc_logic) ((!link_in_0_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(link_in_0_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void towerMerge_top::thread_link_in_0_V_data_V_0_vld_in() {
    link_in_0_V_data_V_0_vld_in = link_in_0_TVALID.read();
}

void towerMerge_top::thread_link_in_0_V_data_V_0_vld_out() {
    link_in_0_V_data_V_0_vld_out = link_in_0_V_data_V_0_state.read()[0];
}

void towerMerge_top::thread_link_in_0_V_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_in_0_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        link_in_0_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_in_0_V_last_V_0_vld_in() {
    link_in_0_V_last_V_0_vld_in = link_in_0_TVALID.read();
}

void towerMerge_top::thread_link_in_1_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        link_in_1_TDATA_blk_n = link_in_1_V_data_V_0_state.read()[0];
    } else {
        link_in_1_TDATA_blk_n = ap_const_logic_1;
    }
}

void towerMerge_top::thread_link_in_1_TREADY() {
    link_in_1_TREADY = link_in_1_V_last_V_0_state.read()[1];
}

void towerMerge_top::thread_link_in_1_V_data_V_0_ack_in() {
    link_in_1_V_data_V_0_ack_in = link_in_1_V_data_V_0_state.read()[1];
}

void towerMerge_top::thread_link_in_1_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_in_1_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        link_in_1_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_in_1_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_1_V_data_V_0_sel.read())) {
        link_in_1_V_data_V_0_data_out = link_in_1_V_data_V_0_payload_B.read();
    } else {
        link_in_1_V_data_V_0_data_out = link_in_1_V_data_V_0_payload_A.read();
    }
}

void towerMerge_top::thread_link_in_1_V_data_V_0_load_A() {
    link_in_1_V_data_V_0_load_A = (link_in_1_V_data_V_0_state_cmp_full.read() & ~link_in_1_V_data_V_0_sel_wr.read());
}

void towerMerge_top::thread_link_in_1_V_data_V_0_load_B() {
    link_in_1_V_data_V_0_load_B = (link_in_1_V_data_V_0_sel_wr.read() & link_in_1_V_data_V_0_state_cmp_full.read());
}

void towerMerge_top::thread_link_in_1_V_data_V_0_sel() {
    link_in_1_V_data_V_0_sel = link_in_1_V_data_V_0_sel_rd.read();
}

void towerMerge_top::thread_link_in_1_V_data_V_0_state_cmp_full() {
    link_in_1_V_data_V_0_state_cmp_full =  (sc_logic) ((!link_in_1_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(link_in_1_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void towerMerge_top::thread_link_in_1_V_data_V_0_vld_in() {
    link_in_1_V_data_V_0_vld_in = link_in_1_TVALID.read();
}

void towerMerge_top::thread_link_in_1_V_data_V_0_vld_out() {
    link_in_1_V_data_V_0_vld_out = link_in_1_V_data_V_0_state.read()[0];
}

void towerMerge_top::thread_link_in_1_V_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_in_1_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        link_in_1_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_in_1_V_last_V_0_vld_in() {
    link_in_1_V_last_V_0_vld_in = link_in_1_TVALID.read();
}

void towerMerge_top::thread_link_in_2_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        link_in_2_TDATA_blk_n = link_in_2_V_data_V_0_state.read()[0];
    } else {
        link_in_2_TDATA_blk_n = ap_const_logic_1;
    }
}

void towerMerge_top::thread_link_in_2_TREADY() {
    link_in_2_TREADY = link_in_2_V_last_V_0_state.read()[1];
}

void towerMerge_top::thread_link_in_2_V_data_V_0_ack_in() {
    link_in_2_V_data_V_0_ack_in = link_in_2_V_data_V_0_state.read()[1];
}

void towerMerge_top::thread_link_in_2_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_in_2_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        link_in_2_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_in_2_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_2_V_data_V_0_sel.read())) {
        link_in_2_V_data_V_0_data_out = link_in_2_V_data_V_0_payload_B.read();
    } else {
        link_in_2_V_data_V_0_data_out = link_in_2_V_data_V_0_payload_A.read();
    }
}

void towerMerge_top::thread_link_in_2_V_data_V_0_load_A() {
    link_in_2_V_data_V_0_load_A = (link_in_2_V_data_V_0_state_cmp_full.read() & ~link_in_2_V_data_V_0_sel_wr.read());
}

void towerMerge_top::thread_link_in_2_V_data_V_0_load_B() {
    link_in_2_V_data_V_0_load_B = (link_in_2_V_data_V_0_sel_wr.read() & link_in_2_V_data_V_0_state_cmp_full.read());
}

void towerMerge_top::thread_link_in_2_V_data_V_0_sel() {
    link_in_2_V_data_V_0_sel = link_in_2_V_data_V_0_sel_rd.read();
}

void towerMerge_top::thread_link_in_2_V_data_V_0_state_cmp_full() {
    link_in_2_V_data_V_0_state_cmp_full =  (sc_logic) ((!link_in_2_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(link_in_2_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void towerMerge_top::thread_link_in_2_V_data_V_0_vld_in() {
    link_in_2_V_data_V_0_vld_in = link_in_2_TVALID.read();
}

void towerMerge_top::thread_link_in_2_V_data_V_0_vld_out() {
    link_in_2_V_data_V_0_vld_out = link_in_2_V_data_V_0_state.read()[0];
}

void towerMerge_top::thread_link_in_2_V_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_in_2_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        link_in_2_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_in_2_V_last_V_0_vld_in() {
    link_in_2_V_last_V_0_vld_in = link_in_2_TVALID.read();
}

void towerMerge_top::thread_link_in_3_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        link_in_3_TDATA_blk_n = link_in_3_V_data_V_0_state.read()[0];
    } else {
        link_in_3_TDATA_blk_n = ap_const_logic_1;
    }
}

void towerMerge_top::thread_link_in_3_TREADY() {
    link_in_3_TREADY = link_in_3_V_last_V_0_state.read()[1];
}

void towerMerge_top::thread_link_in_3_V_data_V_0_ack_in() {
    link_in_3_V_data_V_0_ack_in = link_in_3_V_data_V_0_state.read()[1];
}

void towerMerge_top::thread_link_in_3_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_in_3_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        link_in_3_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_in_3_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_in_3_V_data_V_0_sel.read())) {
        link_in_3_V_data_V_0_data_out = link_in_3_V_data_V_0_payload_B.read();
    } else {
        link_in_3_V_data_V_0_data_out = link_in_3_V_data_V_0_payload_A.read();
    }
}

void towerMerge_top::thread_link_in_3_V_data_V_0_load_A() {
    link_in_3_V_data_V_0_load_A = (link_in_3_V_data_V_0_state_cmp_full.read() & ~link_in_3_V_data_V_0_sel_wr.read());
}

void towerMerge_top::thread_link_in_3_V_data_V_0_load_B() {
    link_in_3_V_data_V_0_load_B = (link_in_3_V_data_V_0_sel_wr.read() & link_in_3_V_data_V_0_state_cmp_full.read());
}

void towerMerge_top::thread_link_in_3_V_data_V_0_sel() {
    link_in_3_V_data_V_0_sel = link_in_3_V_data_V_0_sel_rd.read();
}

void towerMerge_top::thread_link_in_3_V_data_V_0_state_cmp_full() {
    link_in_3_V_data_V_0_state_cmp_full =  (sc_logic) ((!link_in_3_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(link_in_3_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void towerMerge_top::thread_link_in_3_V_data_V_0_vld_in() {
    link_in_3_V_data_V_0_vld_in = link_in_3_TVALID.read();
}

void towerMerge_top::thread_link_in_3_V_data_V_0_vld_out() {
    link_in_3_V_data_V_0_vld_out = link_in_3_V_data_V_0_state.read()[0];
}

void towerMerge_top::thread_link_in_3_V_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_in_3_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        link_in_3_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_in_3_V_last_V_0_vld_in() {
    link_in_3_V_last_V_0_vld_in = link_in_3_TVALID.read();
}

void towerMerge_top::thread_link_out_0_TDATA() {
    link_out_0_TDATA = link_out_0_V_data_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_0_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        link_out_0_TDATA_blk_n = link_out_0_V_data_V_1_state.read()[1];
    } else {
        link_out_0_TDATA_blk_n = ap_const_logic_1;
    }
}

void towerMerge_top::thread_link_out_0_TLAST() {
    link_out_0_TLAST = link_out_0_V_last_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_0_TUSER() {
    link_out_0_TUSER = link_out_0_V_user_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_0_TVALID() {
    link_out_0_TVALID = link_out_0_V_last_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_0_V_data_V_1_ack_in() {
    link_out_0_V_data_V_1_ack_in = link_out_0_V_data_V_1_state.read()[1];
}

void towerMerge_top::thread_link_out_0_V_data_V_1_ack_out() {
    link_out_0_V_data_V_1_ack_out = link_out_0_TREADY.read();
}

void towerMerge_top::thread_link_out_0_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_0_V_data_V_1_sel.read())) {
        link_out_0_V_data_V_1_data_out = link_out_0_V_data_V_1_payload_B.read();
    } else {
        link_out_0_V_data_V_1_data_out = link_out_0_V_data_V_1_payload_A.read();
    }
}

void towerMerge_top::thread_link_out_0_V_data_V_1_load_A() {
    link_out_0_V_data_V_1_load_A = (link_out_0_V_data_V_1_state_cmp_full.read() & ~link_out_0_V_data_V_1_sel_wr.read());
}

void towerMerge_top::thread_link_out_0_V_data_V_1_load_B() {
    link_out_0_V_data_V_1_load_B = (link_out_0_V_data_V_1_sel_wr.read() & link_out_0_V_data_V_1_state_cmp_full.read());
}

void towerMerge_top::thread_link_out_0_V_data_V_1_sel() {
    link_out_0_V_data_V_1_sel = link_out_0_V_data_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_0_V_data_V_1_state_cmp_full() {
    link_out_0_V_data_V_1_state_cmp_full =  (sc_logic) ((!link_out_0_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(link_out_0_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void towerMerge_top::thread_link_out_0_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_0_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_0_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_0_V_data_V_1_vld_out() {
    link_out_0_V_data_V_1_vld_out = link_out_0_V_data_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_0_V_last_V_1_ack_out() {
    link_out_0_V_last_V_1_ack_out = link_out_0_TREADY.read();
}

void towerMerge_top::thread_link_out_0_V_last_V_1_data_out() {
    link_out_0_V_last_V_1_data_out = ap_const_lv1_1;
}

void towerMerge_top::thread_link_out_0_V_last_V_1_sel() {
    link_out_0_V_last_V_1_sel = link_out_0_V_last_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_0_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_0_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_0_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_0_V_last_V_1_vld_out() {
    link_out_0_V_last_V_1_vld_out = link_out_0_V_last_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_0_V_user_V_1_ack_out() {
    link_out_0_V_user_V_1_ack_out = link_out_0_TREADY.read();
}

void towerMerge_top::thread_link_out_0_V_user_V_1_data_out() {
    link_out_0_V_user_V_1_data_out = ap_const_lv8_0;
}

void towerMerge_top::thread_link_out_0_V_user_V_1_sel() {
    link_out_0_V_user_V_1_sel = link_out_0_V_user_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_0_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_0_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_0_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_0_V_user_V_1_vld_out() {
    link_out_0_V_user_V_1_vld_out = link_out_0_V_user_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_1_TDATA() {
    link_out_1_TDATA = link_out_1_V_data_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_1_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        link_out_1_TDATA_blk_n = link_out_1_V_data_V_1_state.read()[1];
    } else {
        link_out_1_TDATA_blk_n = ap_const_logic_1;
    }
}

void towerMerge_top::thread_link_out_1_TLAST() {
    link_out_1_TLAST = link_out_1_V_last_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_1_TUSER() {
    link_out_1_TUSER = link_out_1_V_user_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_1_TVALID() {
    link_out_1_TVALID = link_out_1_V_last_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_1_V_data_V_1_ack_in() {
    link_out_1_V_data_V_1_ack_in = link_out_1_V_data_V_1_state.read()[1];
}

void towerMerge_top::thread_link_out_1_V_data_V_1_ack_out() {
    link_out_1_V_data_V_1_ack_out = link_out_1_TREADY.read();
}

void towerMerge_top::thread_link_out_1_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_1_V_data_V_1_sel.read())) {
        link_out_1_V_data_V_1_data_out = link_out_1_V_data_V_1_payload_B.read();
    } else {
        link_out_1_V_data_V_1_data_out = link_out_1_V_data_V_1_payload_A.read();
    }
}

void towerMerge_top::thread_link_out_1_V_data_V_1_load_A() {
    link_out_1_V_data_V_1_load_A = (link_out_1_V_data_V_1_state_cmp_full.read() & ~link_out_1_V_data_V_1_sel_wr.read());
}

void towerMerge_top::thread_link_out_1_V_data_V_1_load_B() {
    link_out_1_V_data_V_1_load_B = (link_out_1_V_data_V_1_sel_wr.read() & link_out_1_V_data_V_1_state_cmp_full.read());
}

void towerMerge_top::thread_link_out_1_V_data_V_1_sel() {
    link_out_1_V_data_V_1_sel = link_out_1_V_data_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_1_V_data_V_1_state_cmp_full() {
    link_out_1_V_data_V_1_state_cmp_full =  (sc_logic) ((!link_out_1_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(link_out_1_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void towerMerge_top::thread_link_out_1_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_1_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_1_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_1_V_data_V_1_vld_out() {
    link_out_1_V_data_V_1_vld_out = link_out_1_V_data_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_1_V_last_V_1_ack_out() {
    link_out_1_V_last_V_1_ack_out = link_out_1_TREADY.read();
}

void towerMerge_top::thread_link_out_1_V_last_V_1_data_out() {
    link_out_1_V_last_V_1_data_out = ap_const_lv1_1;
}

void towerMerge_top::thread_link_out_1_V_last_V_1_sel() {
    link_out_1_V_last_V_1_sel = link_out_1_V_last_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_1_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_1_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_1_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_1_V_last_V_1_vld_out() {
    link_out_1_V_last_V_1_vld_out = link_out_1_V_last_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_1_V_user_V_1_ack_out() {
    link_out_1_V_user_V_1_ack_out = link_out_1_TREADY.read();
}

void towerMerge_top::thread_link_out_1_V_user_V_1_data_out() {
    link_out_1_V_user_V_1_data_out = ap_const_lv8_0;
}

void towerMerge_top::thread_link_out_1_V_user_V_1_sel() {
    link_out_1_V_user_V_1_sel = link_out_1_V_user_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_1_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_1_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_1_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_1_V_user_V_1_vld_out() {
    link_out_1_V_user_V_1_vld_out = link_out_1_V_user_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_2_TDATA() {
    link_out_2_TDATA = link_out_2_V_data_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_2_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        link_out_2_TDATA_blk_n = link_out_2_V_data_V_1_state.read()[1];
    } else {
        link_out_2_TDATA_blk_n = ap_const_logic_1;
    }
}

void towerMerge_top::thread_link_out_2_TLAST() {
    link_out_2_TLAST = link_out_2_V_last_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_2_TUSER() {
    link_out_2_TUSER = link_out_2_V_user_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_2_TVALID() {
    link_out_2_TVALID = link_out_2_V_last_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_2_V_data_V_1_ack_in() {
    link_out_2_V_data_V_1_ack_in = link_out_2_V_data_V_1_state.read()[1];
}

void towerMerge_top::thread_link_out_2_V_data_V_1_ack_out() {
    link_out_2_V_data_V_1_ack_out = link_out_2_TREADY.read();
}

void towerMerge_top::thread_link_out_2_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_2_V_data_V_1_sel.read())) {
        link_out_2_V_data_V_1_data_out = link_out_2_V_data_V_1_payload_B.read();
    } else {
        link_out_2_V_data_V_1_data_out = link_out_2_V_data_V_1_payload_A.read();
    }
}

void towerMerge_top::thread_link_out_2_V_data_V_1_load_A() {
    link_out_2_V_data_V_1_load_A = (link_out_2_V_data_V_1_state_cmp_full.read() & ~link_out_2_V_data_V_1_sel_wr.read());
}

void towerMerge_top::thread_link_out_2_V_data_V_1_load_B() {
    link_out_2_V_data_V_1_load_B = (link_out_2_V_data_V_1_sel_wr.read() & link_out_2_V_data_V_1_state_cmp_full.read());
}

void towerMerge_top::thread_link_out_2_V_data_V_1_sel() {
    link_out_2_V_data_V_1_sel = link_out_2_V_data_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_2_V_data_V_1_state_cmp_full() {
    link_out_2_V_data_V_1_state_cmp_full =  (sc_logic) ((!link_out_2_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(link_out_2_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void towerMerge_top::thread_link_out_2_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_2_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_2_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_2_V_data_V_1_vld_out() {
    link_out_2_V_data_V_1_vld_out = link_out_2_V_data_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_2_V_last_V_1_ack_out() {
    link_out_2_V_last_V_1_ack_out = link_out_2_TREADY.read();
}

void towerMerge_top::thread_link_out_2_V_last_V_1_data_out() {
    link_out_2_V_last_V_1_data_out = ap_const_lv1_1;
}

void towerMerge_top::thread_link_out_2_V_last_V_1_sel() {
    link_out_2_V_last_V_1_sel = link_out_2_V_last_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_2_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_2_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_2_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_2_V_last_V_1_vld_out() {
    link_out_2_V_last_V_1_vld_out = link_out_2_V_last_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_2_V_user_V_1_ack_out() {
    link_out_2_V_user_V_1_ack_out = link_out_2_TREADY.read();
}

void towerMerge_top::thread_link_out_2_V_user_V_1_data_out() {
    link_out_2_V_user_V_1_data_out = ap_const_lv8_0;
}

void towerMerge_top::thread_link_out_2_V_user_V_1_sel() {
    link_out_2_V_user_V_1_sel = link_out_2_V_user_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_2_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_2_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_2_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_2_V_user_V_1_vld_out() {
    link_out_2_V_user_V_1_vld_out = link_out_2_V_user_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_3_TDATA() {
    link_out_3_TDATA = link_out_3_V_data_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_3_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        link_out_3_TDATA_blk_n = link_out_3_V_data_V_1_state.read()[1];
    } else {
        link_out_3_TDATA_blk_n = ap_const_logic_1;
    }
}

void towerMerge_top::thread_link_out_3_TLAST() {
    link_out_3_TLAST = link_out_3_V_last_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_3_TUSER() {
    link_out_3_TUSER = link_out_3_V_user_V_1_data_out.read();
}

void towerMerge_top::thread_link_out_3_TVALID() {
    link_out_3_TVALID = link_out_3_V_last_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_3_V_data_V_1_ack_in() {
    link_out_3_V_data_V_1_ack_in = link_out_3_V_data_V_1_state.read()[1];
}

void towerMerge_top::thread_link_out_3_V_data_V_1_ack_out() {
    link_out_3_V_data_V_1_ack_out = link_out_3_TREADY.read();
}

void towerMerge_top::thread_link_out_3_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, link_out_3_V_data_V_1_sel.read())) {
        link_out_3_V_data_V_1_data_out = link_out_3_V_data_V_1_payload_B.read();
    } else {
        link_out_3_V_data_V_1_data_out = link_out_3_V_data_V_1_payload_A.read();
    }
}

void towerMerge_top::thread_link_out_3_V_data_V_1_load_A() {
    link_out_3_V_data_V_1_load_A = (link_out_3_V_data_V_1_state_cmp_full.read() & ~link_out_3_V_data_V_1_sel_wr.read());
}

void towerMerge_top::thread_link_out_3_V_data_V_1_load_B() {
    link_out_3_V_data_V_1_load_B = (link_out_3_V_data_V_1_sel_wr.read() & link_out_3_V_data_V_1_state_cmp_full.read());
}

void towerMerge_top::thread_link_out_3_V_data_V_1_sel() {
    link_out_3_V_data_V_1_sel = link_out_3_V_data_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_3_V_data_V_1_state_cmp_full() {
    link_out_3_V_data_V_1_state_cmp_full =  (sc_logic) ((!link_out_3_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(link_out_3_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void towerMerge_top::thread_link_out_3_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_3_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_3_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_3_V_data_V_1_vld_out() {
    link_out_3_V_data_V_1_vld_out = link_out_3_V_data_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_3_V_last_V_1_ack_out() {
    link_out_3_V_last_V_1_ack_out = link_out_3_TREADY.read();
}

void towerMerge_top::thread_link_out_3_V_last_V_1_data_out() {
    link_out_3_V_last_V_1_data_out = ap_const_lv1_1;
}

void towerMerge_top::thread_link_out_3_V_last_V_1_sel() {
    link_out_3_V_last_V_1_sel = link_out_3_V_last_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_3_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_3_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_3_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_3_V_last_V_1_vld_out() {
    link_out_3_V_last_V_1_vld_out = link_out_3_V_last_V_1_state.read()[0];
}

void towerMerge_top::thread_link_out_3_V_user_V_1_ack_out() {
    link_out_3_V_user_V_1_ack_out = link_out_3_TREADY.read();
}

void towerMerge_top::thread_link_out_3_V_user_V_1_data_out() {
    link_out_3_V_user_V_1_data_out = ap_const_lv8_0;
}

void towerMerge_top::thread_link_out_3_V_user_V_1_sel() {
    link_out_3_V_user_V_1_sel = link_out_3_V_user_V_1_sel_rd.read();
}

void towerMerge_top::thread_link_out_3_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        link_out_3_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        link_out_3_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void towerMerge_top::thread_link_out_3_V_user_V_1_vld_out() {
    link_out_3_V_user_V_1_vld_out = link_out_3_V_user_V_1_state.read()[0];
}

void towerMerge_top::thread_tmp_1_fu_850_p18() {
    tmp_1_fu_850_p18 = esl_concat<512,32>(esl_concat<480,32>(esl_concat<448,32>(esl_concat<416,32>(esl_concat<384,32>(esl_concat<352,32>(esl_concat<320,32>(esl_concat<288,32>(esl_concat<256,32>(esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(call_ret_stitchInPhi_fu_250_ap_return_33.read(), call_ret_stitchInPhi_fu_250_ap_return_32.read()), call_ret_stitchInPhi_fu_250_ap_return_31.read()), call_ret_stitchInPhi_fu_250_ap_return_30.read()), call_ret_stitchInPhi_fu_250_ap_return_29.read()), call_ret_stitchInPhi_fu_250_ap_return_28.read()), call_ret_stitchInPhi_fu_250_ap_return_27.read()), call_ret_stitchInPhi_fu_250_ap_return_26.read()), call_ret_stitchInPhi_fu_250_ap_return_25.read()), call_ret_stitchInPhi_fu_250_ap_return_24.read()), call_ret_stitchInPhi_fu_250_ap_return_23.read()), call_ret_stitchInPhi_fu_250_ap_return_22.read()), call_ret_stitchInPhi_fu_250_ap_return_21.read()), call_ret_stitchInPhi_fu_250_ap_return_20.read()), call_ret_stitchInPhi_fu_250_ap_return_19.read()), call_ret_stitchInPhi_fu_250_ap_return_18.read()), call_ret_stitchInPhi_fu_250_ap_return_17.read());
}

void towerMerge_top::thread_tmp_data_V_4_fu_837_p5() {
    tmp_data_V_4_fu_837_p5 = esl_partset<576,576,544,32,32>(link_in_0_V_data_V_0_data_out.read(), tmp_fu_799_p18.read(), ap_const_lv32_0, ap_const_lv32_21F);
}

void towerMerge_top::thread_tmp_data_V_5_fu_888_p5() {
    tmp_data_V_5_fu_888_p5 = esl_partset<576,576,544,32,32>(link_in_0_V_data_V_0_data_out.read(), tmp_1_fu_850_p18.read(), ap_const_lv32_0, ap_const_lv32_21F);
}

void towerMerge_top::thread_tmp_fu_799_p18() {
    tmp_fu_799_p18 = esl_concat<512,32>(esl_concat<480,32>(esl_concat<448,32>(esl_concat<416,32>(esl_concat<384,32>(esl_concat<352,32>(esl_concat<320,32>(esl_concat<288,32>(esl_concat<256,32>(esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(call_ret_stitchInPhi_fu_250_ap_return_16.read(), call_ret_stitchInPhi_fu_250_ap_return_15.read()), call_ret_stitchInPhi_fu_250_ap_return_14.read()), call_ret_stitchInPhi_fu_250_ap_return_13.read()), call_ret_stitchInPhi_fu_250_ap_return_12.read()), call_ret_stitchInPhi_fu_250_ap_return_11.read()), call_ret_stitchInPhi_fu_250_ap_return_10.read()), call_ret_stitchInPhi_fu_250_ap_return_9.read()), call_ret_stitchInPhi_fu_250_ap_return_8.read()), call_ret_stitchInPhi_fu_250_ap_return_7.read()), call_ret_stitchInPhi_fu_250_ap_return_6.read()), call_ret_stitchInPhi_fu_250_ap_return_5.read()), call_ret_stitchInPhi_fu_250_ap_return_4.read()), call_ret_stitchInPhi_fu_250_ap_return_3.read()), call_ret_stitchInPhi_fu_250_ap_return_2.read()), call_ret_stitchInPhi_fu_250_ap_return_1.read()), call_ret_stitchInPhi_fu_250_ap_return_0.read());
}

void towerMerge_top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void towerMerge_top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_out_0_TREADY\" :  \"" << link_out_0_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_out_1_TREADY\" :  \"" << link_out_1_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_out_2_TREADY\" :  \"" << link_out_2_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_out_3_TREADY\" :  \"" << link_out_3_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_0_TDATA\" :  \"" << link_in_0_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_0_TVALID\" :  \"" << link_in_0_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_in_0_TREADY\" :  \"" << link_in_0_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_1_TDATA\" :  \"" << link_in_1_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_1_TVALID\" :  \"" << link_in_1_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_in_1_TREADY\" :  \"" << link_in_1_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_2_TDATA\" :  \"" << link_in_2_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_2_TVALID\" :  \"" << link_in_2_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_in_2_TREADY\" :  \"" << link_in_2_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_3_TDATA\" :  \"" << link_in_3_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_3_TVALID\" :  \"" << link_in_3_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_in_3_TREADY\" :  \"" << link_in_3_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_0_TUSER\" :  \"" << link_in_0_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_1_TUSER\" :  \"" << link_in_1_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_2_TUSER\" :  \"" << link_in_2_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_3_TUSER\" :  \"" << link_in_3_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_0_TLAST\" :  \"" << link_in_0_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_1_TLAST\" :  \"" << link_in_1_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_2_TLAST\" :  \"" << link_in_2_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"link_in_3_TLAST\" :  \"" << link_in_3_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_0_TDATA\" :  \"" << link_out_0_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_0_TVALID\" :  \"" << link_out_0_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_1_TDATA\" :  \"" << link_out_1_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_1_TVALID\" :  \"" << link_out_1_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_2_TDATA\" :  \"" << link_out_2_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_2_TVALID\" :  \"" << link_out_2_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_3_TDATA\" :  \"" << link_out_3_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_3_TVALID\" :  \"" << link_out_3_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_0_TUSER\" :  \"" << link_out_0_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_1_TUSER\" :  \"" << link_out_1_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_2_TUSER\" :  \"" << link_out_2_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_3_TUSER\" :  \"" << link_out_3_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_0_TLAST\" :  \"" << link_out_0_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_1_TLAST\" :  \"" << link_out_1_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_2_TLAST\" :  \"" << link_out_2_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"link_out_3_TLAST\" :  \"" << link_out_3_TLAST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

