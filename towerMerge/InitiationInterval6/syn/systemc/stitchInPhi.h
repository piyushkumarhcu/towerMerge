// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _stitchInPhi_HH_
#define _stitchInPhi_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "stitchNeighbors.h"

namespace ap_rtl {

struct stitchInPhi : public sc_module {
    // Port declarations 75
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > p_read;
    sc_in< sc_lv<32> > p_read1;
    sc_in< sc_lv<32> > p_read2;
    sc_in< sc_lv<32> > p_read3;
    sc_in< sc_lv<32> > p_read4;
    sc_in< sc_lv<32> > p_read5;
    sc_in< sc_lv<32> > p_read6;
    sc_in< sc_lv<32> > p_read7;
    sc_in< sc_lv<32> > p_read8;
    sc_in< sc_lv<32> > p_read9;
    sc_in< sc_lv<32> > p_read10;
    sc_in< sc_lv<32> > p_read11;
    sc_in< sc_lv<32> > p_read12;
    sc_in< sc_lv<32> > p_read13;
    sc_in< sc_lv<32> > p_read14;
    sc_in< sc_lv<32> > p_read15;
    sc_in< sc_lv<32> > p_read16;
    sc_in< sc_lv<32> > p_read17;
    sc_in< sc_lv<32> > p_read18;
    sc_in< sc_lv<32> > p_read19;
    sc_in< sc_lv<32> > p_read20;
    sc_in< sc_lv<32> > p_read21;
    sc_in< sc_lv<32> > p_read22;
    sc_in< sc_lv<32> > p_read23;
    sc_in< sc_lv<32> > p_read24;
    sc_in< sc_lv<32> > p_read25;
    sc_in< sc_lv<32> > p_read26;
    sc_in< sc_lv<32> > p_read27;
    sc_in< sc_lv<32> > p_read28;
    sc_in< sc_lv<32> > p_read29;
    sc_in< sc_lv<32> > p_read30;
    sc_in< sc_lv<32> > p_read31;
    sc_in< sc_lv<32> > p_read32;
    sc_in< sc_lv<32> > p_read33;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_out< sc_lv<32> > ap_return_2;
    sc_out< sc_lv<32> > ap_return_3;
    sc_out< sc_lv<32> > ap_return_4;
    sc_out< sc_lv<32> > ap_return_5;
    sc_out< sc_lv<32> > ap_return_6;
    sc_out< sc_lv<32> > ap_return_7;
    sc_out< sc_lv<32> > ap_return_8;
    sc_out< sc_lv<32> > ap_return_9;
    sc_out< sc_lv<32> > ap_return_10;
    sc_out< sc_lv<32> > ap_return_11;
    sc_out< sc_lv<32> > ap_return_12;
    sc_out< sc_lv<32> > ap_return_13;
    sc_out< sc_lv<32> > ap_return_14;
    sc_out< sc_lv<32> > ap_return_15;
    sc_out< sc_lv<32> > ap_return_16;
    sc_out< sc_lv<32> > ap_return_17;
    sc_out< sc_lv<32> > ap_return_18;
    sc_out< sc_lv<32> > ap_return_19;
    sc_out< sc_lv<32> > ap_return_20;
    sc_out< sc_lv<32> > ap_return_21;
    sc_out< sc_lv<32> > ap_return_22;
    sc_out< sc_lv<32> > ap_return_23;
    sc_out< sc_lv<32> > ap_return_24;
    sc_out< sc_lv<32> > ap_return_25;
    sc_out< sc_lv<32> > ap_return_26;
    sc_out< sc_lv<32> > ap_return_27;
    sc_out< sc_lv<32> > ap_return_28;
    sc_out< sc_lv<32> > ap_return_29;
    sc_out< sc_lv<32> > ap_return_30;
    sc_out< sc_lv<32> > ap_return_31;
    sc_out< sc_lv<32> > ap_return_32;
    sc_out< sc_lv<32> > ap_return_33;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    stitchInPhi(sc_module_name name);
    SC_HAS_PROCESS(stitchInPhi);

    ~stitchInPhi();

    sc_trace_file* mVcdFile;

    stitchNeighbors* grp_stitchNeighbors_fu_288;
    stitchNeighbors* grp_stitchNeighbors_fu_296;
    stitchNeighbors* grp_stitchNeighbors_fu_304;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > towersy_0_tower_0_s_reg_538;
    sc_signal< sc_lv<32> > towersy_1_tower_0_s_reg_543;
    sc_signal< sc_lv<32> > towersy_0_tower_1_s_reg_548;
    sc_signal< sc_lv<32> > towersy_1_tower_1_s_reg_553;
    sc_signal< sc_lv<32> > towersy_0_tower_2_s_reg_558;
    sc_signal< sc_lv<32> > towersy_1_tower_2_s_reg_563;
    sc_signal< sc_lv<32> > towersy_0_tower_3_s_reg_568;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > towersy_1_tower_3_s_reg_573;
    sc_signal< sc_lv<32> > towersy_0_tower_4_s_reg_578;
    sc_signal< sc_lv<32> > towersy_1_tower_4_s_reg_583;
    sc_signal< sc_lv<32> > towersy_0_tower_5_s_reg_588;
    sc_signal< sc_lv<32> > towersy_1_tower_5_s_reg_593;
    sc_signal< sc_lv<32> > towersy_0_tower_6_s_reg_598;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > towersy_1_tower_6_s_reg_603;
    sc_signal< sc_lv<32> > towersy_0_tower_7_s_reg_608;
    sc_signal< sc_lv<32> > towersy_1_tower_7_s_reg_613;
    sc_signal< sc_lv<32> > towersy_0_tower_8_s_reg_618;
    sc_signal< sc_lv<32> > towersy_1_tower_8_s_reg_623;
    sc_signal< sc_lv<32> > towersy_0_tower_9_s_reg_628;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > towersy_1_tower_9_s_reg_633;
    sc_signal< sc_lv<32> > towersy_0_tower_10_reg_638;
    sc_signal< sc_lv<32> > towersy_1_tower_10_reg_643;
    sc_signal< sc_lv<32> > towersy_0_tower_11_reg_648;
    sc_signal< sc_lv<32> > towersy_1_tower_11_reg_653;
    sc_signal< sc_lv<32> > towersy_0_tower_12_reg_658;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > towersy_1_tower_12_reg_663;
    sc_signal< sc_lv<32> > towersy_0_tower_13_reg_668;
    sc_signal< sc_lv<32> > towersy_1_tower_13_reg_673;
    sc_signal< sc_lv<32> > towersy_0_tower_14_reg_678;
    sc_signal< sc_lv<32> > towersy_1_tower_14_reg_683;
    sc_signal< sc_lv<32> > ap_port_reg_p_read3;
    sc_signal< sc_lv<32> > ap_port_reg_p_read4;
    sc_signal< sc_lv<32> > ap_port_reg_p_read5;
    sc_signal< sc_lv<32> > ap_port_reg_p_read6;
    sc_signal< sc_lv<32> > ap_port_reg_p_read7;
    sc_signal< sc_lv<32> > ap_port_reg_p_read8;
    sc_signal< sc_lv<32> > ap_port_reg_p_read9;
    sc_signal< sc_lv<32> > ap_port_reg_p_read10;
    sc_signal< sc_lv<32> > ap_port_reg_p_read11;
    sc_signal< sc_lv<32> > ap_port_reg_p_read12;
    sc_signal< sc_lv<32> > ap_port_reg_p_read13;
    sc_signal< sc_lv<32> > ap_port_reg_p_read14;
    sc_signal< sc_lv<32> > ap_port_reg_p_read15;
    sc_signal< sc_lv<32> > ap_port_reg_p_read16;
    sc_signal< sc_lv<32> > ap_port_reg_p_read20;
    sc_signal< sc_lv<32> > ap_port_reg_p_read21;
    sc_signal< sc_lv<32> > ap_port_reg_p_read22;
    sc_signal< sc_lv<32> > ap_port_reg_p_read23;
    sc_signal< sc_lv<32> > ap_port_reg_p_read24;
    sc_signal< sc_lv<32> > ap_port_reg_p_read25;
    sc_signal< sc_lv<32> > ap_port_reg_p_read26;
    sc_signal< sc_lv<32> > ap_port_reg_p_read27;
    sc_signal< sc_lv<32> > ap_port_reg_p_read28;
    sc_signal< sc_lv<32> > ap_port_reg_p_read29;
    sc_signal< sc_lv<32> > ap_port_reg_p_read30;
    sc_signal< sc_lv<32> > ap_port_reg_p_read31;
    sc_signal< sc_lv<32> > ap_port_reg_p_read32;
    sc_signal< sc_lv<32> > ap_port_reg_p_read33;
    sc_signal< sc_logic > grp_stitchNeighbors_fu_288_ap_ready;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_288_Ai_data_V;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_288_Bi_data_V;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_288_ap_return_0;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_288_ap_return_1;
    sc_signal< sc_logic > grp_stitchNeighbors_fu_296_ap_ready;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_296_Ai_data_V;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_296_Bi_data_V;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_296_ap_return_0;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_296_ap_return_1;
    sc_signal< sc_logic > grp_stitchNeighbors_fu_304_ap_ready;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_304_Ai_data_V;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_304_Bi_data_V;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_304_ap_return_0;
    sc_signal< sc_lv<32> > grp_stitchNeighbors_fu_304_ap_return_1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_14();
    void thread_ap_return_15();
    void thread_ap_return_16();
    void thread_ap_return_17();
    void thread_ap_return_18();
    void thread_ap_return_19();
    void thread_ap_return_2();
    void thread_ap_return_20();
    void thread_ap_return_21();
    void thread_ap_return_22();
    void thread_ap_return_23();
    void thread_ap_return_24();
    void thread_ap_return_25();
    void thread_ap_return_26();
    void thread_ap_return_27();
    void thread_ap_return_28();
    void thread_ap_return_29();
    void thread_ap_return_3();
    void thread_ap_return_30();
    void thread_ap_return_31();
    void thread_ap_return_32();
    void thread_ap_return_33();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_grp_stitchNeighbors_fu_288_Ai_data_V();
    void thread_grp_stitchNeighbors_fu_288_Bi_data_V();
    void thread_grp_stitchNeighbors_fu_296_Ai_data_V();
    void thread_grp_stitchNeighbors_fu_296_Bi_data_V();
    void thread_grp_stitchNeighbors_fu_304_Ai_data_V();
    void thread_grp_stitchNeighbors_fu_304_Bi_data_V();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
