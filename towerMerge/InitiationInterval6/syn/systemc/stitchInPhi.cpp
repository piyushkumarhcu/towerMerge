// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "stitchInPhi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic stitchInPhi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic stitchInPhi::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> stitchInPhi::ap_ST_fsm_state1 = "1";
const sc_lv<6> stitchInPhi::ap_ST_fsm_state2 = "10";
const sc_lv<6> stitchInPhi::ap_ST_fsm_state3 = "100";
const sc_lv<6> stitchInPhi::ap_ST_fsm_state4 = "1000";
const sc_lv<6> stitchInPhi::ap_ST_fsm_state5 = "10000";
const sc_lv<6> stitchInPhi::ap_ST_fsm_state6 = "100000";
const sc_lv<32> stitchInPhi::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> stitchInPhi::ap_const_lv32_1 = "1";
const sc_lv<32> stitchInPhi::ap_const_lv32_2 = "10";
const sc_lv<32> stitchInPhi::ap_const_lv32_3 = "11";
const sc_lv<32> stitchInPhi::ap_const_lv32_4 = "100";
const sc_lv<32> stitchInPhi::ap_const_lv32_5 = "101";
const bool stitchInPhi::ap_const_boolean_1 = true;

stitchInPhi::stitchInPhi(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_stitchNeighbors_fu_288 = new stitchNeighbors("grp_stitchNeighbors_fu_288");
    grp_stitchNeighbors_fu_288->ap_ready(grp_stitchNeighbors_fu_288_ap_ready);
    grp_stitchNeighbors_fu_288->Ai_data_V(grp_stitchNeighbors_fu_288_Ai_data_V);
    grp_stitchNeighbors_fu_288->Bi_data_V(grp_stitchNeighbors_fu_288_Bi_data_V);
    grp_stitchNeighbors_fu_288->ap_return_0(grp_stitchNeighbors_fu_288_ap_return_0);
    grp_stitchNeighbors_fu_288->ap_return_1(grp_stitchNeighbors_fu_288_ap_return_1);
    grp_stitchNeighbors_fu_296 = new stitchNeighbors("grp_stitchNeighbors_fu_296");
    grp_stitchNeighbors_fu_296->ap_ready(grp_stitchNeighbors_fu_296_ap_ready);
    grp_stitchNeighbors_fu_296->Ai_data_V(grp_stitchNeighbors_fu_296_Ai_data_V);
    grp_stitchNeighbors_fu_296->Bi_data_V(grp_stitchNeighbors_fu_296_Bi_data_V);
    grp_stitchNeighbors_fu_296->ap_return_0(grp_stitchNeighbors_fu_296_ap_return_0);
    grp_stitchNeighbors_fu_296->ap_return_1(grp_stitchNeighbors_fu_296_ap_return_1);
    grp_stitchNeighbors_fu_304 = new stitchNeighbors("grp_stitchNeighbors_fu_304");
    grp_stitchNeighbors_fu_304->ap_ready(grp_stitchNeighbors_fu_304_ap_ready);
    grp_stitchNeighbors_fu_304->Ai_data_V(grp_stitchNeighbors_fu_304_Ai_data_V);
    grp_stitchNeighbors_fu_304->Bi_data_V(grp_stitchNeighbors_fu_304_Bi_data_V);
    grp_stitchNeighbors_fu_304->ap_return_0(grp_stitchNeighbors_fu_304_ap_return_0);
    grp_stitchNeighbors_fu_304->ap_return_1(grp_stitchNeighbors_fu_304_ap_return_1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_ce );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_ce );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( towersy_0_tower_0_s_reg_538 );
    sensitive << ( ap_ce );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_1_s_reg_548 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_10);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_10_reg_638 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_11);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_11_reg_648 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_12);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_12_reg_658 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_13);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_13_reg_668 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_14);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_14_reg_678 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_15);
    sensitive << ( ap_ce );
    sensitive << ( grp_stitchNeighbors_fu_288_ap_return_0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_16);
    sensitive << ( ap_ce );
    sensitive << ( grp_stitchNeighbors_fu_296_ap_return_0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_17);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_0_s_reg_543 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_18);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_1_s_reg_553 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_19);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_2_s_reg_563 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_2_s_reg_558 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_20);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_3_s_reg_573 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_21);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_4_s_reg_583 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_22);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_5_s_reg_593 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_23);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_6_s_reg_603 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_24);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_7_s_reg_613 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_25);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_8_s_reg_623 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_26);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_9_s_reg_633 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_27);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_10_reg_643 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_28);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_11_reg_653 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_29);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_12_reg_663 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_3_s_reg_568 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_30);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_13_reg_673 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_31);
    sensitive << ( ap_ce );
    sensitive << ( towersy_1_tower_14_reg_683 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_32);
    sensitive << ( ap_ce );
    sensitive << ( grp_stitchNeighbors_fu_288_ap_return_1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_33);
    sensitive << ( ap_ce );
    sensitive << ( grp_stitchNeighbors_fu_296_ap_return_1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_4_s_reg_578 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_5_s_reg_588 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_6_s_reg_598 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_7_s_reg_608 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_8_s_reg_618 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( ap_ce );
    sensitive << ( towersy_0_tower_9_s_reg_628 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_stitchNeighbors_fu_288_Ai_data_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_port_reg_p_read3 );
    sensitive << ( ap_port_reg_p_read6 );
    sensitive << ( ap_port_reg_p_read9 );
    sensitive << ( ap_port_reg_p_read12 );
    sensitive << ( ap_port_reg_p_read15 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_stitchNeighbors_fu_288_Bi_data_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read17 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_port_reg_p_read20 );
    sensitive << ( ap_port_reg_p_read23 );
    sensitive << ( ap_port_reg_p_read26 );
    sensitive << ( ap_port_reg_p_read29 );
    sensitive << ( ap_port_reg_p_read32 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_stitchNeighbors_fu_296_Ai_data_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_port_reg_p_read4 );
    sensitive << ( ap_port_reg_p_read7 );
    sensitive << ( ap_port_reg_p_read10 );
    sensitive << ( ap_port_reg_p_read13 );
    sensitive << ( ap_port_reg_p_read16 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_stitchNeighbors_fu_296_Bi_data_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read18 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_port_reg_p_read21 );
    sensitive << ( ap_port_reg_p_read24 );
    sensitive << ( ap_port_reg_p_read27 );
    sensitive << ( ap_port_reg_p_read30 );
    sensitive << ( ap_port_reg_p_read33 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_stitchNeighbors_fu_304_Ai_data_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_port_reg_p_read5 );
    sensitive << ( ap_port_reg_p_read8 );
    sensitive << ( ap_port_reg_p_read11 );
    sensitive << ( ap_port_reg_p_read14 );

    SC_METHOD(thread_grp_stitchNeighbors_fu_304_Bi_data_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read19 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_port_reg_p_read22 );
    sensitive << ( ap_port_reg_p_read25 );
    sensitive << ( ap_port_reg_p_read28 );
    sensitive << ( ap_port_reg_p_read31 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_ce );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "stitchInPhi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_read, "(port)p_read");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, p_read2, "(port)p_read2");
    sc_trace(mVcdFile, p_read3, "(port)p_read3");
    sc_trace(mVcdFile, p_read4, "(port)p_read4");
    sc_trace(mVcdFile, p_read5, "(port)p_read5");
    sc_trace(mVcdFile, p_read6, "(port)p_read6");
    sc_trace(mVcdFile, p_read7, "(port)p_read7");
    sc_trace(mVcdFile, p_read8, "(port)p_read8");
    sc_trace(mVcdFile, p_read9, "(port)p_read9");
    sc_trace(mVcdFile, p_read10, "(port)p_read10");
    sc_trace(mVcdFile, p_read11, "(port)p_read11");
    sc_trace(mVcdFile, p_read12, "(port)p_read12");
    sc_trace(mVcdFile, p_read13, "(port)p_read13");
    sc_trace(mVcdFile, p_read14, "(port)p_read14");
    sc_trace(mVcdFile, p_read15, "(port)p_read15");
    sc_trace(mVcdFile, p_read16, "(port)p_read16");
    sc_trace(mVcdFile, p_read17, "(port)p_read17");
    sc_trace(mVcdFile, p_read18, "(port)p_read18");
    sc_trace(mVcdFile, p_read19, "(port)p_read19");
    sc_trace(mVcdFile, p_read20, "(port)p_read20");
    sc_trace(mVcdFile, p_read21, "(port)p_read21");
    sc_trace(mVcdFile, p_read22, "(port)p_read22");
    sc_trace(mVcdFile, p_read23, "(port)p_read23");
    sc_trace(mVcdFile, p_read24, "(port)p_read24");
    sc_trace(mVcdFile, p_read25, "(port)p_read25");
    sc_trace(mVcdFile, p_read26, "(port)p_read26");
    sc_trace(mVcdFile, p_read27, "(port)p_read27");
    sc_trace(mVcdFile, p_read28, "(port)p_read28");
    sc_trace(mVcdFile, p_read29, "(port)p_read29");
    sc_trace(mVcdFile, p_read30, "(port)p_read30");
    sc_trace(mVcdFile, p_read31, "(port)p_read31");
    sc_trace(mVcdFile, p_read32, "(port)p_read32");
    sc_trace(mVcdFile, p_read33, "(port)p_read33");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
    sc_trace(mVcdFile, ap_return_10, "(port)ap_return_10");
    sc_trace(mVcdFile, ap_return_11, "(port)ap_return_11");
    sc_trace(mVcdFile, ap_return_12, "(port)ap_return_12");
    sc_trace(mVcdFile, ap_return_13, "(port)ap_return_13");
    sc_trace(mVcdFile, ap_return_14, "(port)ap_return_14");
    sc_trace(mVcdFile, ap_return_15, "(port)ap_return_15");
    sc_trace(mVcdFile, ap_return_16, "(port)ap_return_16");
    sc_trace(mVcdFile, ap_return_17, "(port)ap_return_17");
    sc_trace(mVcdFile, ap_return_18, "(port)ap_return_18");
    sc_trace(mVcdFile, ap_return_19, "(port)ap_return_19");
    sc_trace(mVcdFile, ap_return_20, "(port)ap_return_20");
    sc_trace(mVcdFile, ap_return_21, "(port)ap_return_21");
    sc_trace(mVcdFile, ap_return_22, "(port)ap_return_22");
    sc_trace(mVcdFile, ap_return_23, "(port)ap_return_23");
    sc_trace(mVcdFile, ap_return_24, "(port)ap_return_24");
    sc_trace(mVcdFile, ap_return_25, "(port)ap_return_25");
    sc_trace(mVcdFile, ap_return_26, "(port)ap_return_26");
    sc_trace(mVcdFile, ap_return_27, "(port)ap_return_27");
    sc_trace(mVcdFile, ap_return_28, "(port)ap_return_28");
    sc_trace(mVcdFile, ap_return_29, "(port)ap_return_29");
    sc_trace(mVcdFile, ap_return_30, "(port)ap_return_30");
    sc_trace(mVcdFile, ap_return_31, "(port)ap_return_31");
    sc_trace(mVcdFile, ap_return_32, "(port)ap_return_32");
    sc_trace(mVcdFile, ap_return_33, "(port)ap_return_33");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, towersy_0_tower_0_s_reg_538, "towersy_0_tower_0_s_reg_538");
    sc_trace(mVcdFile, towersy_1_tower_0_s_reg_543, "towersy_1_tower_0_s_reg_543");
    sc_trace(mVcdFile, towersy_0_tower_1_s_reg_548, "towersy_0_tower_1_s_reg_548");
    sc_trace(mVcdFile, towersy_1_tower_1_s_reg_553, "towersy_1_tower_1_s_reg_553");
    sc_trace(mVcdFile, towersy_0_tower_2_s_reg_558, "towersy_0_tower_2_s_reg_558");
    sc_trace(mVcdFile, towersy_1_tower_2_s_reg_563, "towersy_1_tower_2_s_reg_563");
    sc_trace(mVcdFile, towersy_0_tower_3_s_reg_568, "towersy_0_tower_3_s_reg_568");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, towersy_1_tower_3_s_reg_573, "towersy_1_tower_3_s_reg_573");
    sc_trace(mVcdFile, towersy_0_tower_4_s_reg_578, "towersy_0_tower_4_s_reg_578");
    sc_trace(mVcdFile, towersy_1_tower_4_s_reg_583, "towersy_1_tower_4_s_reg_583");
    sc_trace(mVcdFile, towersy_0_tower_5_s_reg_588, "towersy_0_tower_5_s_reg_588");
    sc_trace(mVcdFile, towersy_1_tower_5_s_reg_593, "towersy_1_tower_5_s_reg_593");
    sc_trace(mVcdFile, towersy_0_tower_6_s_reg_598, "towersy_0_tower_6_s_reg_598");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, towersy_1_tower_6_s_reg_603, "towersy_1_tower_6_s_reg_603");
    sc_trace(mVcdFile, towersy_0_tower_7_s_reg_608, "towersy_0_tower_7_s_reg_608");
    sc_trace(mVcdFile, towersy_1_tower_7_s_reg_613, "towersy_1_tower_7_s_reg_613");
    sc_trace(mVcdFile, towersy_0_tower_8_s_reg_618, "towersy_0_tower_8_s_reg_618");
    sc_trace(mVcdFile, towersy_1_tower_8_s_reg_623, "towersy_1_tower_8_s_reg_623");
    sc_trace(mVcdFile, towersy_0_tower_9_s_reg_628, "towersy_0_tower_9_s_reg_628");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, towersy_1_tower_9_s_reg_633, "towersy_1_tower_9_s_reg_633");
    sc_trace(mVcdFile, towersy_0_tower_10_reg_638, "towersy_0_tower_10_reg_638");
    sc_trace(mVcdFile, towersy_1_tower_10_reg_643, "towersy_1_tower_10_reg_643");
    sc_trace(mVcdFile, towersy_0_tower_11_reg_648, "towersy_0_tower_11_reg_648");
    sc_trace(mVcdFile, towersy_1_tower_11_reg_653, "towersy_1_tower_11_reg_653");
    sc_trace(mVcdFile, towersy_0_tower_12_reg_658, "towersy_0_tower_12_reg_658");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, towersy_1_tower_12_reg_663, "towersy_1_tower_12_reg_663");
    sc_trace(mVcdFile, towersy_0_tower_13_reg_668, "towersy_0_tower_13_reg_668");
    sc_trace(mVcdFile, towersy_1_tower_13_reg_673, "towersy_1_tower_13_reg_673");
    sc_trace(mVcdFile, towersy_0_tower_14_reg_678, "towersy_0_tower_14_reg_678");
    sc_trace(mVcdFile, towersy_1_tower_14_reg_683, "towersy_1_tower_14_reg_683");
    sc_trace(mVcdFile, ap_port_reg_p_read3, "ap_port_reg_p_read3");
    sc_trace(mVcdFile, ap_port_reg_p_read4, "ap_port_reg_p_read4");
    sc_trace(mVcdFile, ap_port_reg_p_read5, "ap_port_reg_p_read5");
    sc_trace(mVcdFile, ap_port_reg_p_read6, "ap_port_reg_p_read6");
    sc_trace(mVcdFile, ap_port_reg_p_read7, "ap_port_reg_p_read7");
    sc_trace(mVcdFile, ap_port_reg_p_read8, "ap_port_reg_p_read8");
    sc_trace(mVcdFile, ap_port_reg_p_read9, "ap_port_reg_p_read9");
    sc_trace(mVcdFile, ap_port_reg_p_read10, "ap_port_reg_p_read10");
    sc_trace(mVcdFile, ap_port_reg_p_read11, "ap_port_reg_p_read11");
    sc_trace(mVcdFile, ap_port_reg_p_read12, "ap_port_reg_p_read12");
    sc_trace(mVcdFile, ap_port_reg_p_read13, "ap_port_reg_p_read13");
    sc_trace(mVcdFile, ap_port_reg_p_read14, "ap_port_reg_p_read14");
    sc_trace(mVcdFile, ap_port_reg_p_read15, "ap_port_reg_p_read15");
    sc_trace(mVcdFile, ap_port_reg_p_read16, "ap_port_reg_p_read16");
    sc_trace(mVcdFile, ap_port_reg_p_read20, "ap_port_reg_p_read20");
    sc_trace(mVcdFile, ap_port_reg_p_read21, "ap_port_reg_p_read21");
    sc_trace(mVcdFile, ap_port_reg_p_read22, "ap_port_reg_p_read22");
    sc_trace(mVcdFile, ap_port_reg_p_read23, "ap_port_reg_p_read23");
    sc_trace(mVcdFile, ap_port_reg_p_read24, "ap_port_reg_p_read24");
    sc_trace(mVcdFile, ap_port_reg_p_read25, "ap_port_reg_p_read25");
    sc_trace(mVcdFile, ap_port_reg_p_read26, "ap_port_reg_p_read26");
    sc_trace(mVcdFile, ap_port_reg_p_read27, "ap_port_reg_p_read27");
    sc_trace(mVcdFile, ap_port_reg_p_read28, "ap_port_reg_p_read28");
    sc_trace(mVcdFile, ap_port_reg_p_read29, "ap_port_reg_p_read29");
    sc_trace(mVcdFile, ap_port_reg_p_read30, "ap_port_reg_p_read30");
    sc_trace(mVcdFile, ap_port_reg_p_read31, "ap_port_reg_p_read31");
    sc_trace(mVcdFile, ap_port_reg_p_read32, "ap_port_reg_p_read32");
    sc_trace(mVcdFile, ap_port_reg_p_read33, "ap_port_reg_p_read33");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_288_ap_ready, "grp_stitchNeighbors_fu_288_ap_ready");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_288_Ai_data_V, "grp_stitchNeighbors_fu_288_Ai_data_V");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_288_Bi_data_V, "grp_stitchNeighbors_fu_288_Bi_data_V");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_288_ap_return_0, "grp_stitchNeighbors_fu_288_ap_return_0");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_288_ap_return_1, "grp_stitchNeighbors_fu_288_ap_return_1");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_296_ap_ready, "grp_stitchNeighbors_fu_296_ap_ready");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_296_Ai_data_V, "grp_stitchNeighbors_fu_296_Ai_data_V");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_296_Bi_data_V, "grp_stitchNeighbors_fu_296_Bi_data_V");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_296_ap_return_0, "grp_stitchNeighbors_fu_296_ap_return_0");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_296_ap_return_1, "grp_stitchNeighbors_fu_296_ap_return_1");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_304_ap_ready, "grp_stitchNeighbors_fu_304_ap_ready");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_304_Ai_data_V, "grp_stitchNeighbors_fu_304_Ai_data_V");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_304_Bi_data_V, "grp_stitchNeighbors_fu_304_Bi_data_V");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_304_ap_return_0, "grp_stitchNeighbors_fu_304_ap_return_0");
    sc_trace(mVcdFile, grp_stitchNeighbors_fu_304_ap_return_1, "grp_stitchNeighbors_fu_304_ap_return_1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

stitchInPhi::~stitchInPhi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_stitchNeighbors_fu_288;
    delete grp_stitchNeighbors_fu_296;
    delete grp_stitchNeighbors_fu_304;
}

void stitchInPhi::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_port_reg_p_read10 = p_read10.read();
        ap_port_reg_p_read11 = p_read11.read();
        ap_port_reg_p_read12 = p_read12.read();
        ap_port_reg_p_read13 = p_read13.read();
        ap_port_reg_p_read14 = p_read14.read();
        ap_port_reg_p_read15 = p_read15.read();
        ap_port_reg_p_read16 = p_read16.read();
        ap_port_reg_p_read20 = p_read20.read();
        ap_port_reg_p_read21 = p_read21.read();
        ap_port_reg_p_read22 = p_read22.read();
        ap_port_reg_p_read23 = p_read23.read();
        ap_port_reg_p_read24 = p_read24.read();
        ap_port_reg_p_read25 = p_read25.read();
        ap_port_reg_p_read26 = p_read26.read();
        ap_port_reg_p_read27 = p_read27.read();
        ap_port_reg_p_read28 = p_read28.read();
        ap_port_reg_p_read29 = p_read29.read();
        ap_port_reg_p_read3 = p_read3.read();
        ap_port_reg_p_read30 = p_read30.read();
        ap_port_reg_p_read31 = p_read31.read();
        ap_port_reg_p_read32 = p_read32.read();
        ap_port_reg_p_read33 = p_read33.read();
        ap_port_reg_p_read4 = p_read4.read();
        ap_port_reg_p_read5 = p_read5.read();
        ap_port_reg_p_read6 = p_read6.read();
        ap_port_reg_p_read7 = p_read7.read();
        ap_port_reg_p_read8 = p_read8.read();
        ap_port_reg_p_read9 = p_read9.read();
        towersy_0_tower_0_s_reg_538 = grp_stitchNeighbors_fu_288_ap_return_0.read();
        towersy_0_tower_1_s_reg_548 = grp_stitchNeighbors_fu_296_ap_return_0.read();
        towersy_0_tower_2_s_reg_558 = grp_stitchNeighbors_fu_304_ap_return_0.read();
        towersy_1_tower_0_s_reg_543 = grp_stitchNeighbors_fu_288_ap_return_1.read();
        towersy_1_tower_1_s_reg_553 = grp_stitchNeighbors_fu_296_ap_return_1.read();
        towersy_1_tower_2_s_reg_563 = grp_stitchNeighbors_fu_304_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        towersy_0_tower_10_reg_638 = grp_stitchNeighbors_fu_296_ap_return_0.read();
        towersy_0_tower_11_reg_648 = grp_stitchNeighbors_fu_304_ap_return_0.read();
        towersy_0_tower_9_s_reg_628 = grp_stitchNeighbors_fu_288_ap_return_0.read();
        towersy_1_tower_10_reg_643 = grp_stitchNeighbors_fu_296_ap_return_1.read();
        towersy_1_tower_11_reg_653 = grp_stitchNeighbors_fu_304_ap_return_1.read();
        towersy_1_tower_9_s_reg_633 = grp_stitchNeighbors_fu_288_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        towersy_0_tower_12_reg_658 = grp_stitchNeighbors_fu_288_ap_return_0.read();
        towersy_0_tower_13_reg_668 = grp_stitchNeighbors_fu_296_ap_return_0.read();
        towersy_0_tower_14_reg_678 = grp_stitchNeighbors_fu_304_ap_return_0.read();
        towersy_1_tower_12_reg_663 = grp_stitchNeighbors_fu_288_ap_return_1.read();
        towersy_1_tower_13_reg_673 = grp_stitchNeighbors_fu_296_ap_return_1.read();
        towersy_1_tower_14_reg_683 = grp_stitchNeighbors_fu_304_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        towersy_0_tower_3_s_reg_568 = grp_stitchNeighbors_fu_288_ap_return_0.read();
        towersy_0_tower_4_s_reg_578 = grp_stitchNeighbors_fu_296_ap_return_0.read();
        towersy_0_tower_5_s_reg_588 = grp_stitchNeighbors_fu_304_ap_return_0.read();
        towersy_1_tower_3_s_reg_573 = grp_stitchNeighbors_fu_288_ap_return_1.read();
        towersy_1_tower_4_s_reg_583 = grp_stitchNeighbors_fu_296_ap_return_1.read();
        towersy_1_tower_5_s_reg_593 = grp_stitchNeighbors_fu_304_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        towersy_0_tower_6_s_reg_598 = grp_stitchNeighbors_fu_288_ap_return_0.read();
        towersy_0_tower_7_s_reg_608 = grp_stitchNeighbors_fu_296_ap_return_0.read();
        towersy_0_tower_8_s_reg_618 = grp_stitchNeighbors_fu_304_ap_return_0.read();
        towersy_1_tower_6_s_reg_603 = grp_stitchNeighbors_fu_288_ap_return_1.read();
        towersy_1_tower_7_s_reg_613 = grp_stitchNeighbors_fu_296_ap_return_1.read();
        towersy_1_tower_8_s_reg_623 = grp_stitchNeighbors_fu_304_ap_return_1.read();
    }
}

void stitchInPhi::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void stitchInPhi::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void stitchInPhi::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void stitchInPhi::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void stitchInPhi::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void stitchInPhi::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void stitchInPhi::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void stitchInPhi::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void stitchInPhi::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void stitchInPhi::thread_ap_return_0() {
    ap_return_0 = towersy_0_tower_0_s_reg_538.read();
}

void stitchInPhi::thread_ap_return_1() {
    ap_return_1 = towersy_0_tower_1_s_reg_548.read();
}

void stitchInPhi::thread_ap_return_10() {
    ap_return_10 = towersy_0_tower_10_reg_638.read();
}

void stitchInPhi::thread_ap_return_11() {
    ap_return_11 = towersy_0_tower_11_reg_648.read();
}

void stitchInPhi::thread_ap_return_12() {
    ap_return_12 = towersy_0_tower_12_reg_658.read();
}

void stitchInPhi::thread_ap_return_13() {
    ap_return_13 = towersy_0_tower_13_reg_668.read();
}

void stitchInPhi::thread_ap_return_14() {
    ap_return_14 = towersy_0_tower_14_reg_678.read();
}

void stitchInPhi::thread_ap_return_15() {
    ap_return_15 = grp_stitchNeighbors_fu_288_ap_return_0.read();
}

void stitchInPhi::thread_ap_return_16() {
    ap_return_16 = grp_stitchNeighbors_fu_296_ap_return_0.read();
}

void stitchInPhi::thread_ap_return_17() {
    ap_return_17 = towersy_1_tower_0_s_reg_543.read();
}

void stitchInPhi::thread_ap_return_18() {
    ap_return_18 = towersy_1_tower_1_s_reg_553.read();
}

void stitchInPhi::thread_ap_return_19() {
    ap_return_19 = towersy_1_tower_2_s_reg_563.read();
}

void stitchInPhi::thread_ap_return_2() {
    ap_return_2 = towersy_0_tower_2_s_reg_558.read();
}

void stitchInPhi::thread_ap_return_20() {
    ap_return_20 = towersy_1_tower_3_s_reg_573.read();
}

void stitchInPhi::thread_ap_return_21() {
    ap_return_21 = towersy_1_tower_4_s_reg_583.read();
}

void stitchInPhi::thread_ap_return_22() {
    ap_return_22 = towersy_1_tower_5_s_reg_593.read();
}

void stitchInPhi::thread_ap_return_23() {
    ap_return_23 = towersy_1_tower_6_s_reg_603.read();
}

void stitchInPhi::thread_ap_return_24() {
    ap_return_24 = towersy_1_tower_7_s_reg_613.read();
}

void stitchInPhi::thread_ap_return_25() {
    ap_return_25 = towersy_1_tower_8_s_reg_623.read();
}

void stitchInPhi::thread_ap_return_26() {
    ap_return_26 = towersy_1_tower_9_s_reg_633.read();
}

void stitchInPhi::thread_ap_return_27() {
    ap_return_27 = towersy_1_tower_10_reg_643.read();
}

void stitchInPhi::thread_ap_return_28() {
    ap_return_28 = towersy_1_tower_11_reg_653.read();
}

void stitchInPhi::thread_ap_return_29() {
    ap_return_29 = towersy_1_tower_12_reg_663.read();
}

void stitchInPhi::thread_ap_return_3() {
    ap_return_3 = towersy_0_tower_3_s_reg_568.read();
}

void stitchInPhi::thread_ap_return_30() {
    ap_return_30 = towersy_1_tower_13_reg_673.read();
}

void stitchInPhi::thread_ap_return_31() {
    ap_return_31 = towersy_1_tower_14_reg_683.read();
}

void stitchInPhi::thread_ap_return_32() {
    ap_return_32 = grp_stitchNeighbors_fu_288_ap_return_1.read();
}

void stitchInPhi::thread_ap_return_33() {
    ap_return_33 = grp_stitchNeighbors_fu_296_ap_return_1.read();
}

void stitchInPhi::thread_ap_return_4() {
    ap_return_4 = towersy_0_tower_4_s_reg_578.read();
}

void stitchInPhi::thread_ap_return_5() {
    ap_return_5 = towersy_0_tower_5_s_reg_588.read();
}

void stitchInPhi::thread_ap_return_6() {
    ap_return_6 = towersy_0_tower_6_s_reg_598.read();
}

void stitchInPhi::thread_ap_return_7() {
    ap_return_7 = towersy_0_tower_7_s_reg_608.read();
}

void stitchInPhi::thread_ap_return_8() {
    ap_return_8 = towersy_0_tower_8_s_reg_618.read();
}

void stitchInPhi::thread_ap_return_9() {
    ap_return_9 = towersy_0_tower_9_s_reg_628.read();
}

void stitchInPhi::thread_grp_stitchNeighbors_fu_288_Ai_data_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_stitchNeighbors_fu_288_Ai_data_V = ap_port_reg_p_read15.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_stitchNeighbors_fu_288_Ai_data_V = ap_port_reg_p_read12.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_stitchNeighbors_fu_288_Ai_data_V = ap_port_reg_p_read9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_stitchNeighbors_fu_288_Ai_data_V = ap_port_reg_p_read6.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_stitchNeighbors_fu_288_Ai_data_V = ap_port_reg_p_read3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_stitchNeighbors_fu_288_Ai_data_V = p_read.read();
    } else {
        grp_stitchNeighbors_fu_288_Ai_data_V = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void stitchInPhi::thread_grp_stitchNeighbors_fu_288_Bi_data_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_stitchNeighbors_fu_288_Bi_data_V = ap_port_reg_p_read32.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_stitchNeighbors_fu_288_Bi_data_V = ap_port_reg_p_read29.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_stitchNeighbors_fu_288_Bi_data_V = ap_port_reg_p_read26.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_stitchNeighbors_fu_288_Bi_data_V = ap_port_reg_p_read23.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_stitchNeighbors_fu_288_Bi_data_V = ap_port_reg_p_read20.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_stitchNeighbors_fu_288_Bi_data_V = p_read17.read();
    } else {
        grp_stitchNeighbors_fu_288_Bi_data_V = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void stitchInPhi::thread_grp_stitchNeighbors_fu_296_Ai_data_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_stitchNeighbors_fu_296_Ai_data_V = ap_port_reg_p_read16.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_stitchNeighbors_fu_296_Ai_data_V = ap_port_reg_p_read13.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_stitchNeighbors_fu_296_Ai_data_V = ap_port_reg_p_read10.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_stitchNeighbors_fu_296_Ai_data_V = ap_port_reg_p_read7.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_stitchNeighbors_fu_296_Ai_data_V = ap_port_reg_p_read4.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_stitchNeighbors_fu_296_Ai_data_V = p_read1.read();
    } else {
        grp_stitchNeighbors_fu_296_Ai_data_V = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void stitchInPhi::thread_grp_stitchNeighbors_fu_296_Bi_data_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_stitchNeighbors_fu_296_Bi_data_V = ap_port_reg_p_read33.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_stitchNeighbors_fu_296_Bi_data_V = ap_port_reg_p_read30.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_stitchNeighbors_fu_296_Bi_data_V = ap_port_reg_p_read27.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_stitchNeighbors_fu_296_Bi_data_V = ap_port_reg_p_read24.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_stitchNeighbors_fu_296_Bi_data_V = ap_port_reg_p_read21.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_stitchNeighbors_fu_296_Bi_data_V = p_read18.read();
    } else {
        grp_stitchNeighbors_fu_296_Bi_data_V = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void stitchInPhi::thread_grp_stitchNeighbors_fu_304_Ai_data_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_stitchNeighbors_fu_304_Ai_data_V = ap_port_reg_p_read14.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_stitchNeighbors_fu_304_Ai_data_V = ap_port_reg_p_read11.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_stitchNeighbors_fu_304_Ai_data_V = ap_port_reg_p_read8.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_stitchNeighbors_fu_304_Ai_data_V = ap_port_reg_p_read5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_stitchNeighbors_fu_304_Ai_data_V = p_read2.read();
    } else {
        grp_stitchNeighbors_fu_304_Ai_data_V = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void stitchInPhi::thread_grp_stitchNeighbors_fu_304_Bi_data_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_stitchNeighbors_fu_304_Bi_data_V = ap_port_reg_p_read31.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_stitchNeighbors_fu_304_Bi_data_V = ap_port_reg_p_read28.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_stitchNeighbors_fu_304_Bi_data_V = ap_port_reg_p_read25.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_stitchNeighbors_fu_304_Bi_data_V = ap_port_reg_p_read22.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_stitchNeighbors_fu_304_Bi_data_V = p_read19.read();
    } else {
        grp_stitchNeighbors_fu_304_Bi_data_V = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void stitchInPhi::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

